{
	"info": {
		"_postman_id": "3a08a99b-5741-4358-8c5d-4d17cf4cc220",
		"name": "Catenax",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "AAS Proxy (Data Consumer Side)",
			"item": [
				{
					"name": "Returns all AAS Descriptors Rewritten By Proxy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{aasProxyUrl}}/registry/shell-descriptors?page=0&pageSize=200",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"registry",
								"shell-descriptors"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "pageSize",
									"value": "200"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requested Asset Administration Shell Descriptors",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/registry/shell-descriptors?page=0&pageSize=10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registry",
										"shell-descriptors"
									],
									"query": [
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "pageSize",
											"value": "10"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"items\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"The shell for a vehicle\"\n        }\n      ],\n      \"globalAssetId\": {\n        \"value\": [\n          \"VIN1230941209423423\"\n        ]\n      },\n      \"idShort\": \"future concept x\",\n      \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n      \"specificAssetIds\": [\n        {\n          \"key\": \"engineserialid\",\n          \"value\": \"12309481209312\"\n        }\n      ],\n      \"submodelDescriptors\": [\n        {\n          \"description\": [\n            {\n              \"language\": \"en\",\n              \"text\": \"Provides base vehicle information\"\n            }\n          ],\n          \"idShort\": \"vehicle base details\",\n          \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n          \"semanticId\": {\n            \"value\": [\n              \"urn:bamm:com.catenax.vehicle:0.1.1\"\n            ]\n          },\n          \"endpoints\": [\n            {\n              \"interface\": \"HTTP\",\n              \"protocolInformation\": {\n                \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n                \"endpointProtocol\": \"HTTPS\",\n                \"endpointProtocolVersion\": \"1.0\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"idShort\": \"future concept x\",\n      \"identification\": \"459842bf-3466-4eb6-8d95-ef0557e64883\"\n    }\n  ],\n  \"totalItems\": 2,\n  \"currentPage\": 0,\n  \"totalPages\": 1,\n  \"itemCount\": 2\n}"
						}
					]
				},
				{
					"name": "Returns AAS ids based on Specific Key-Values Over Proxy",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{aasProxyUrl}}/lookup/shells?assetIds=%7B%22key%22%3A%22urn%3AVAN%3Acom.bmw%3A1.0.0%23%22%2C%22value%22%3A%227e97f714-0785-3f9d-ac37-b319890%0A97be3%22%7D",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"lookup",
								"shells"
							],
							"query": [
								{
									"key": "assetIds",
									"value": "%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D",
									"disabled": true
								},
								{
									"key": "assetIds",
									"value": "%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D",
									"disabled": true
								},
								{
									"key": "assetIds",
									"value": "%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D",
									"disabled": true
								},
								{
									"key": "assetIds",
									"value": "%7B%22key%22%3A%22urn%3AVAN%3Acom.bmw%3A1.0.0%23%22%2C%22value%22%3A%227e97f714-0785-3f9d-ac37-b319890%0A97be3%22%7D"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requested Asset Administration Shell ids",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/lookup/shells?assetIds=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lookup",
										"shells"
									],
									"query": [
										{
											"key": "assetIds",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"fj102930-b69b-4707-95f6-5dbc5e9gdfj1\"\n]"
						}
					]
				},
				{
					"name": "Returns AAS ids based on Auto-Converted Specific Key-Values Over Proxy",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"warning": "This is a duplicate header and will be overridden by the Authorization header generated by Postman.",
								"key": "Authorization",
								"value": "Basic c29tZXVzZXI6c29tZXBhc3N3b3Jk",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{aasProxyUrl}}/lookup/shells?assetIds=%7B%22key%22%3A%22urn%3Astandard%3Aorg.iso%3A9721%23%22%2C%22value%22%3A%225UXFE43588L890072%22%7D",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"lookup",
								"shells"
							],
							"query": [
								{
									"key": "assetIds",
									"value": "%7B%22key%22%3A%22urn%3AVAN%3Acom.bmw%3A1.0.0%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D",
									"disabled": true
								},
								{
									"key": "assetIds",
									"value": "%7B%22key%22%3A%22urn%3Astandard%3Aorg.iso%3A9721%23%22%2C%22value%22%3A%225UXFE43588L890072%22%7D"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requested Asset Administration Shell ids",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/lookup/shells?assetIds=",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"lookup",
										"shells"
									],
									"query": [
										{
											"key": "assetIds",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"fj102930-b69b-4707-95f6-5dbc5e9gdfj1\"\n]"
						}
					]
				},
				{
					"name": "Returns a specific AAS Descriptor By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{aasProxyUrl}}/registry/shell-descriptors/:aasIdentifier",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"registry",
								"shell-descriptors",
								":aasIdentifier"
							],
							"variable": [
								{
									"key": "aasIdentifier",
									"value": "urn%3Atwin%3Acom.BMW%2369ab0d77-c981-41fe-8c0f-bd0c8256228d",
									"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requested Asset Administration Shell Descriptor",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registry",
										"shell-descriptors",
										":aasIdentifier"
									],
									"variable": [
										{
											"key": "aasIdentifier",
											"value": "sunt do exercitation",
											"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Returns a Orga AAS Descriptor By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{aasProxyUrl}}/registry/shell-descriptors/:aasIdentifier",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"registry",
								"shell-descriptors",
								":aasIdentifier"
							],
							"variable": [
								{
									"key": "aasIdentifier",
									"value": "398c047f-c14c-47b9-9c27-d9511afc90d3",
									"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
								}
							]
						}
					},
					"response": [
						{
							"name": "Requested Asset Administration Shell Descriptor",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"registry",
										"shell-descriptors",
										":aasIdentifier"
									],
									"variable": [
										{
											"key": "aasIdentifier",
											"value": "sunt do exercitation",
											"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
						}
					]
				},
				{
					"name": "Get Submodel Over Proxy",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "somepassword",
									"type": "string"
								},
								{
									"key": "username",
									"value": "someuser",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{aasProxyUrl}}/shells/:assetId/aas/:submodelId/submodel?level=deep&content=value&extent=withBlobValue",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"shells",
								":assetId",
								"aas",
								":submodelId",
								"submodel"
							],
							"query": [
								{
									"key": "level",
									"value": "deep"
								},
								{
									"key": "content",
									"value": "value"
								},
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"disabled": true
								},
								{
									"key": "artifact",
									"value": "material-vehicle",
									"disabled": true
								},
								{
									"key": "extent",
									"value": "withBlobValue"
								}
							],
							"variable": [
								{
									"key": "assetId",
									"value": "3c7556f7-6956-4360-8036-d03e5a79c3c8"
								},
								{
									"key": "submodelId",
									"value": "brake-material"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoke Submodel Over Proxy",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "somepassword",
									"type": "string"
								},
								{
									"key": "username",
									"value": "someuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"targetDomain\":\"urn:VAN:com.bmw:1.0.0#\",\r\n    \"identifiers\": {\r\n        \"key\":\"urn:standard:org.iso:9721#\",\r\n        \"values\": [\"5UXFE43588L890072\",\"WMWZB3C56EWM31941\",\"2C3CCAAG4DH723149\"]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{aasProxyUrl}}/shells/:assetId/aas/:submodelId/submodel/submodel-elements/:operationId/invoke?content=value&async=false",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"shells",
								":assetId",
								"aas",
								":submodelId",
								"submodel",
								"submodel-elements",
								":operationId",
								"invoke"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"disabled": true
								},
								{
									"key": "content",
									"value": "value"
								},
								{
									"key": "async",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "assetId",
									"value": "398c047f-c14c-47b9-9c27-d9511afc90d3"
								},
								{
									"key": "submodelId",
									"value": "idconversion-aspect"
								},
								{
									"key": "operationId",
									"value": "convert"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoke Submodel Over Proxy Polymorphic",
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "password",
									"value": "somepassword",
									"type": "string"
								},
								{
									"key": "username",
									"value": "someuser",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"targetDomain\":\"urn:VAN:com.bmw:1.0.0#\",\r\n    \"identifiers\":[\r\n        {\r\n            \"key\":\"urn:standard:org.iso:9721#\",\"value\":\"5UXFE43588L890072\"\r\n        },\r\n        {\r\n            \"key\":\"urn:standard:org.iso:9721#\",\"value\":\"WMWZB3C56EWM31941\"\r\n        },\r\n        {\r\n            \"key\":\"urn:standard:org.iso:9721#\",\"value\":\"2C3CCAAG4DH723149\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{aasProxyUrl}}/shells/:assetId/aas/:submodelId/submodel/submodel-elements/:operationId/invoke?content=value&async=false",
							"host": [
								"{{aasProxyUrl}}"
							],
							"path": [
								"shells",
								":assetId",
								"aas",
								":submodelId",
								"submodel",
								"submodel-elements",
								":operationId",
								"invoke"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"disabled": true
								},
								{
									"key": "content",
									"value": "value"
								},
								{
									"key": "async",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "assetId",
									"value": "398c047f-c14c-47b9-9c27-d9511afc90d3"
								},
								{
									"key": "submodelId",
									"value": "idconversion-aspect"
								},
								{
									"key": "operationId",
									"value": "convert"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Catena-X Network Layers",
			"item": [
				{
					"name": "Semantic Hub",
					"item": [
						{
							"name": "{model-id}",
							"item": [
								{
									"name": "getModelById",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/urn:bamm:com.catenaX:0.0.1%23Traceability",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												"urn:bamm:com.catenaX:0.0.1%23Traceability"
											]
										}
									},
									"response": [
										{
											"name": "The resulting model entry.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "modifyModel",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"private\": false,\n    \"publisher\": \"Catena-X Consortium\",\n    \"type\": \"BAMM\",\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix : <urn:bamm:com.catenaX:0.0.1#> .\\n\\n:Traceability a bamm:Aspect ;\\n   bamm:name \\\"Traceability\\\" ;\\n   bamm:preferredName \\\"Traceability\\\"@en ;\\n   bamm:description \\\"Traceability\\\"@en ;\\n   bamm:properties ( :staticData :uniqueData :individualData :supplierTree :partTree :qualityAlertData ) ;\\n   bamm:operations () .\\n\\n:individualData a bamm:Property ;\\n   bamm:name \\\"individualData\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:characteristic :PartIndividualDataCharacteristic .\\n\\n:PartIndividualDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartIndividualDataCharacteristic\\\" ;\\n   bamm:dataType :PartIndividualDataEntity .\\n\\n:PartIndividualDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartIndividualDataEntity\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:properties ( :productionCountryCode :productionDateGMT ) .\\n\\n:productionCountryCode a bamm:Property ;\\n   bamm:name \\\"productionCountryCode\\\" ;\\n   bamm:preferredName \\\"Country code of production\\\"@en ;\\n   bamm:description \\\"Country code of production\\\"@en ;\\n   bamm:characteristic :CountryCodeCharacteristic ;\\n   bamm:exampleValue \\\"HUR\\\" .\\n\\n:CountryCodeCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"CountryCodeCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:productionDateGMT a bamm:Property ;\\n   bamm:name \\\"productionDateGMT\\\" ;\\n   bamm:preferredName \\\"Production Date (GMT)\\\"@en ;\\n   bamm:description \\\"Production date without timestamp\\\"@en ;\\n   bamm:characteristic :DateWithoutTimestamp ;\\n   bamm:exampleValue \\\"2021-05-30\\\"^^xsd:date .\\n\\n:DateWithoutTimestamp a bamm:Characteristic ;\\n   bamm:name \\\"DateWithoutTimestamp\\\" ;\\n   bamm:preferredName \\\"Date (without timestamp)\\\"@en ;\\n   bamm:description \\\"Date without timestamp conformant to ISO 8601\\\"@en ;\\n   bamm:dataType xsd:date .\\n\\n:partTree a bamm:Property ;\\n   bamm:name \\\"partTree\\\" ;\\n   bamm:preferredName \\\"Part Tree Parent\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:supplierTree a bamm:Property ;\\n   bamm:name \\\"supplierTree\\\" ;\\n   bamm:preferredName \\\"Supplier Tree\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:PartTreeParentCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartTreeParentCharacteristic\\\" ;\\n   bamm:dataType :PartTreeParentEntity .\\n\\n:PartTreeParentEntity a bamm:Entity ;\\n   bamm:name \\\"PartTreeParentEntity\\\" ;\\n   bamm:properties ( :isParentOf ) .\\n\\n:isParentOf a bamm:Property ;\\n   bamm:name \\\"isParentOf\\\" ;\\n   bamm:preferredName \\\"is Parent of\\\"@en ;\\n   bamm:description \\\"Set of Parts, identified by ID\\\"@en ;\\n   bamm:characteristic :IsParentOfCharacteristic .\\n\\n:IsParentOfCharacteristic a bamm-c:Set ;\\n   bamm:name \\\"IsParentOfCharacteristic\\\" ;\\n   bamm:dataType :ProductReferenceEntity .\\n\\n:ProductReferenceEntity a bamm:Entity ;\\n   bamm:name \\\"ProductReferenceEntity\\\" ;\\n   bamm:properties ( :src :value ) ;\\n   bamm:preferredName \\\"Product Reference\\\"@en .\\n\\n:src a bamm:Property ;\\n   bamm:name \\\"src\\\" ;\\n   bamm:preferredName \\\"Product Reference Source\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:value a bamm:Property ;\\n   bamm:name \\\"value\\\" ;\\n   bamm:preferredName \\\"Product Reference Value\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:StringCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"StringCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:qualityAlertData a bamm:Property ;\\n   bamm:name \\\"qualityAlertData\\\" ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en ;\\n   bamm:characteristic :QualityAlertDataCharacteristic .\\n\\n:QualityAlertDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"QualityAlertDataCharacteristic\\\" ;\\n   bamm:dataType :QualityAlertDataEntity .\\n\\n:QualityAlertDataEntity a bamm:Entity ;\\n   bamm:name \\\"QualityAlertDataEntity\\\" ;\\n   bamm:properties ( :qualityAlert :qualityType ) ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en .\\n\\n:qualityAlert a bamm:Property ;\\n   bamm:name \\\"qualityAlert\\\" ;\\n   bamm:preferredName \\\"Quality Alert\\\"@en ;\\n   bamm:characteristic bamm-c:Boolean ;\\n   bamm:exampleValue \\\"true\\\"^^xsd:boolean .\\n\\n:qualityType a bamm:Property ;\\n   bamm:name \\\"qualityType\\\" ;\\n   bamm:preferredName \\\"Quality Type\\\"@en ;\\n   bamm:characteristic :QualityTypeEnum ;\\n   bamm:exampleValue \\\"major\\\"^^xsd:string .\\n\\n:QualityTypeEnum a bamm-c:Enumeration ;\\n   bamm:name \\\"QualityTypeEnum\\\" ;\\n   bamm:dataType xsd:string ;\\n   bamm-c:values ( \\\"major\\\" \\\"minor\\\" \\\"critical\\\" ) .\\n\\n:staticData a bamm:Property ;\\n   bamm:name \\\"staticData\\\" ;\\n   bamm:preferredName \\\"Static Data\\\"@en ;\\n   bamm:characteristic :PartStaticDataCharacteristic .\\n\\n:PartStaticDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartStaticDataCharacteristic\\\" ;\\n   bamm:dataType :PartStaticDataEntity .\\n\\n:PartStaticDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartStaticDataEntity\\\" ;\\n   bamm:properties ( :customerContractOneID :customerOneID :manufacturerContractOneID :manufacturerOneID :partNameCustomer :partNameManufacturer :partNumberCustomer :partNumberManufacturer ) ;\\n   bamm:preferredName \\\"Static Data\\\"@en .\\n\\n:customerContractOneID a bamm:Property ;\\n   bamm:name \\\"customerContractOneID\\\" ;\\n   bamm:preferredName \\\"Customer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:customerOneID a bamm:Property ;\\n   bamm:name \\\"customerOneID\\\" ;\\n   bamm:preferredName \\\"Customer OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer plant\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"CUSTOMER_ID\\\" .\\n\\n:manufacturerContractOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerContractOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:manufacturerOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"ERROR_CP\\\" .\\n\\n:partNameCustomer a bamm:Property ;\\n   bamm:name \\\"partNameCustomer\\\" ;\\n   bamm:preferredName \\\"Name of the product (customer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of customer\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"MIRROR_1\\\" .\\n\\n:partNameManufacturer a bamm:Property ;\\n   bamm:name \\\"partNameManufacturer\\\" ;\\n   bamm:preferredName \\\"Name of the product (manufacturer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of manufacture\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"KLEBER1\\\" .\\n\\n:partNumberCustomer a bamm:Property ;\\n   bamm:name \\\"partNumberCustomer\\\" ;\\n   bamm:preferredName \\\"Part number (customer)\\\"@en ;\\n   bamm:description \\\"Type/Part No. of customer product\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic ;\\n   bamm:exampleValue \\\"1122334455\\\" .\\n\\n:partNumberManufacturer a bamm:Property ;\\n   bamm:name \\\"partNumberManufacturer\\\" ;\\n   bamm:preferredName \\\"Part number (manufacturer)\\\"@en ;\\n   bamm:description \\\"Number of part family of manufacture\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic .\\n\\n:OneIDBusinessPartner a bamm-c:Code ;\\n   bamm:name \\\"OneIDBusinessPartner\\\" ;\\n   bamm:preferredName \\\"OneID BusinessPartner\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:PartNumberCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartNumberCharacteristic\\\" ;\\n   bamm:preferredName \\\"part number\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:uniqueData a bamm:Property ;\\n   bamm:name \\\"uniqueData\\\" ;\\n   bamm:preferredName \\\"Unique Data\\\"@en ;\\n   bamm:characteristic :PartUniqueDataCharacteristic .\\n\\n:PartUniqueDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartUniqueDataCharacteristic\\\" ;\\n   bamm:dataType :PartUniqueDataEntity .\\n\\n:PartUniqueDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartUniqueDataEntity\\\" ;\\n   bamm:properties ( :customerUniqueID :manufacturerUniqueID :uniqueID ) ;\\n   bamm:preferredName \\\"Unique Data Entity\\\"@en .\\n\\n:customerUniqueID a bamm:Property ;\\n   bamm:name \\\"customerUniqueID\\\" ;\\n   bamm:preferredName \\\"Customer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. Of customer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"333\\\" .\\n\\n:manufacturerUniqueID a bamm:Property ;\\n   bamm:name \\\"manufacturerUniqueID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. of manufacturer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"Xxx\\\" .\\n\\n:uniqueID a bamm:Property ;\\n   bamm:name \\\"uniqueID\\\" ;\\n   bamm:preferredName \\\"unique ID\\\"@en ;\\n   bamm:description \\\"this is a local unique ID to identiy the part\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"1AB\\\" .\\n\\n:IdCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"IdCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\"    \n}"
										},
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models"
											]
										}
									},
									"response": [
										{
											"name": "The resulting model entry.",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
										},
										{
											"name": "Created",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "PUT",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
												},
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "deleteModel",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/:model-id",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:net.catenax.semantics:1.0.0%23DigitalTwin",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "The resource was deleted successfully.",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelTree",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/:model-id/diagram",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												":model-id",
												"diagram"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:net.catenax.semantics:1.0.0%23DigitalTwin",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "image/png"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/diagram",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"diagram"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelDocu",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/:model-id/documentation",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												":model-id",
												"documentation"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "Excepteur et",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "OK",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/documentation",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"documentation"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelFile",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/:model-id/file",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												":model-id",
												"file"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:com.catenaX:0.0.1%23Material",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "The raw RDF based model definition.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getModelSchema",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/:model-id/json-schema",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												":model-id",
												"json-schema"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn:bamm:com.catenaX:0.0.1%23Traceability",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "The raw RDF based model definition.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "getExamplePayload",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{semanticHubUrl}}/api/v1/models/:model-id/example-payload",
											"host": [
												"{{semanticHubUrl}}"
											],
											"path": [
												"api",
												"v1",
												"models",
												":model-id",
												"example-payload"
											],
											"variable": [
												{
													"key": "model-id",
													"value": "urn%3Abamm%3Acom.catenax.traceability%3A0.1.0%23AssemblyPartRelationship",
													"description": "(Required) model-id"
												}
											]
										}
									},
									"response": [
										{
											"name": "The raw RDF based model definition.",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Bad Request",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Unauthorized",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Unauthorized",
											"code": 401,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Forbidden",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Forbidden",
											"code": 403,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Not Found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Internal Server Error",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/models/:model-id/file",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"models",
														":model-id",
														"file"
													],
													"variable": [
														{
															"key": "model-id"
														}
													]
												}
											},
											"status": "Internal Server Error",
											"code": 500,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "getModelList",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									],
									"query": [
										{
											"key": "isPrivate",
											"value": "false",
											"description": "isPrivate",
											"disabled": true
										},
										{
											"key": "nameFilter",
											"value": "Movement",
											"description": "nameFilter",
											"disabled": true
										},
										{
											"key": "namespaceFilter",
											"value": "1.0.0",
											"description": "namespaceFilter",
											"disabled": true
										},
										{
											"key": "page",
											"value": "0",
											"description": "(Required) page",
											"disabled": true
										},
										{
											"key": "pageSize",
											"value": "10",
											"description": "(Required) pageSize",
											"disabled": true
										},
										{
											"key": "type",
											"value": "BAMM",
											"description": "type",
											"disabled": true
										},
										{
											"key": "status",
											"value": "RELEASED",
											"disabled": true
										},
										{
											"key": "nameType",
											"value": "_DESCRIPTION_",
											"disabled": true
										}
									]
								}
							},
							"response": [
								{
									"name": "A list of models, matching the provided filter options.",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n {\n  \"id\": \"elit\",\n  \"name\": \"sunt aliqui\",\n  \"private\": false,\n  \"publisher\": \"sunt elit minim\",\n  \"type\": \"BAMM\",\n  \"version\": \"culpa elit mollit\"\n },\n {\n  \"id\": \"culpa\",\n  \"name\": \"officia laborum dolor nostrud Lorem\",\n  \"private\": false,\n  \"publisher\": \"et magna velit\",\n  \"type\": \"BAMM\",\n  \"version\": \"enim quis ad sit aliquip\"\n }\n]"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/models?isPrivate=false&nameFilter=Excepteur et&namespaceFilter=Excepteur et&page=0&pageSize=10&type=BAMM",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											],
											"query": [
												{
													"key": "isPrivate",
													"value": "false"
												},
												{
													"key": "nameFilter",
													"value": "Excepteur et"
												},
												{
													"key": "namespaceFilter",
													"value": "Excepteur et"
												},
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												},
												{
													"key": "type",
													"value": "BAMM"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createProductDescription",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:ProductDescription a bamm:Aspect;\\n    bamm:name \\\"ProductDescription\\\";\\n    bamm:properties (:productID :productName :productDescription :productionDateGMT \\n    [\\n        bamm:property :buildPosition;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :liquidBearing;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :productWeight;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :performanceIndicator;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :productDimension;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ]\\n    [\\n        bamm:property :productType;\\n        bamm:optional \\\"true\\\"^^xsd:boolean\\n    ] );\\n    bamm:operations ();\\n    bamm:preferredName \\\"Product Description\\\"@en, \\\"Produktbeschreibung\\\"@de.\\n:productName a bamm:Property;\\n    bamm:name \\\"productName\\\";\\n    bamm:description \\\"name of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:productDescription a bamm:Property;\\n    bamm:name \\\"productDescription\\\";\\n    bamm:description \\\"description of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:productID a bamm:Property;\\n    bamm:name \\\"productID\\\";\\n    bamm:description \\\"identification of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:buildPosition a bamm:Property;\\n    bamm:name \\\"buildPosition\\\";\\n    bamm:description \\\"building position of the product\\\"@en;\\n    bamm:characteristic bamm-c:Text .\\n:liquidBearing a bamm:Property;\\n    bamm:name \\\"liquidBearing\\\";\\n    bamm:description \\\"indicator whether a liquid bearing is present\\\"@en;\\n    bamm:characteristic bamm-c:Boolean .\\n\\n:performanceIndicator a bamm:Property;\\n    bamm:name \\\"performanceIndicator\\\";\\n    bamm:description \\\"The performance indicator\\\"@en;\\n    bamm:characteristic :PerformanceIndicatorCharacteristic .\\n:PerformanceIndicatorCharacteristic a bamm-c:SingleEntity;\\n    bamm:name \\\"performanceIndicatorCharacteristic\\\";\\n    bamm:dataType :PerformanceIndicatorEntity .\\n:PerformanceIndicatorEntity a bamm:Entity;\\n    bamm:name \\\"performanceIndicatorEntity\\\";\\n    bamm:properties (:electrictiyCapacityMin :electrictiyCapacityMax) .\\n:electrictiyCapacityMin a bamm:Property;\\n    bamm:name \\\"electricCapacityMin\\\";\\n    bamm:description \\\"The minimal electric capacity\\\"@en;\\n    bamm:characteristic :Capacity .\\n:electrictiyCapacityMax a bamm:Property;\\n    bamm:name \\\"electricCapacityMax\\\";\\n    bamm:description \\\"The maximal electric capacity\\\"@en;\\n    bamm:characteristic :Capacity .\\n:Capacity a bamm-c:Measurement;\\n    bamm:name \\\"capacity\\\";\\n    bamm:description \\\"A capacity value\\\"@en;\\n    bamm-c:unit unit:farad;\\n    bamm:dataType xsd:double .\\n\\n:productWeight a bamm:Property;\\n    bamm:name \\\"productWeight\\\";\\n    bamm:description \\\"weight in gramm\\\"@en;\\n    bamm:characteristic :Weight .\\n:Weight a bamm-c:Measurement;\\n    bamm:name \\\"weight\\\";\\n    bamm:description \\\"weight in g\\\"@en;\\n    bamm-c:unit unit:gram;\\n    bamm:dataType xsd:double .\\n\\n:productionDateGMT a bamm:Property;\\n    bamm:name \\\"productionDateGMT\\\";\\n    bamm:description \\\"the production data in GMT time zone\\\"@en;\\n    bamm:exampleValue \\\"2021-09-30\\\"^^xsd:dateTime;\\n    bamm:characteristic bamm-c:Timestamp .\\n\\n:productDimension a bamm:Property;\\n    bamm:name \\\"productDimension\\\";\\n    bamm:description \\\"The performance indicator\\\"@en;\\n    bamm:characteristic :ProductDimension3D .\\n:ProductDimension3D a bamm-c:SingleEntity;\\n    bamm:name \\\"productDimension3D\\\";\\n    bamm:dataType :ProductDimension3DEntity .\\n:ProductDimension3DEntity a bamm:Entity;\\n    bamm:name \\\"productDimension3DEntity\\\";\\n    bamm:properties (:dimensionX :dimensionY :dimensionZ) .\\n:dimensionX a bamm:Property;\\n    bamm:name \\\"dimensionX\\\";\\n    bamm:description \\\"The minimal electric capacity\\\"@en;\\n    bamm:characteristic :Length .\\n:dimensionY a bamm:Property;\\n    bamm:name \\\"dimensionY\\\";\\n    bamm:description \\\"The maximal electric capacity\\\"@en;\\n    bamm:characteristic :Length .\\n:dimensionZ a bamm:Property;\\n    bamm:name \\\"dimensionZ\\\";\\n    bamm:description \\\"The maximal electric capacity\\\"@en;\\n    bamm:characteristic :Length .\\n\\n:Length a bamm-c:Measurement;\\n    bamm:name \\\"length\\\";\\n    bamm:description \\\"A length measurement value\\\"@en;\\n    bamm-c:unit unit:centimetre;\\n    bamm:dataType xsd:double .\\n\\n:productType a bamm:Property;\\n    bamm:name \\\"productType\\\";\\n    bamm:description \\\"product type is described by a list of document types\\\"@en;\\n    bamm:characteristic :SetOfDocumentTypes .\\n:SetOfDocumentTypes a bamm-c:Set;\\n    bamm:name \\\"setOfDocumentTypes\\\";\\n    bamm:description \\\"a set of document types\\\"@en;\\n    bamm-c:elementCharacteristic bamm-c:Text .\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createProductUsage",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenax:0.0.1#>.\\n\\n:ProductUsage a bamm:Aspect;\\n    bamm:name \\\"ProductUsage\\\";\\n    bamm:properties (:lifeSpan :stateOfHealth :stateOfCharge :mileage :numberOfChargingCycles :voltage :residualCurrentHazard :lifeSpanAsPlanned :numberOfChargingCyclesAsPlanned);\\n    bamm:operations ();\\n    bamm:preferredName \\\"Product Usage\\\"@en.\\n:lifeSpan a bamm:Property;\\n    bamm:name \\\"lifeSpan\\\";\\n    bamm:preferredName \\\"lifeSpan\\\"@en;\\n    bamm:characteristic :LifeSpan.\\n:stateOfHealth a bamm:Property;\\n    bamm:name \\\"stateOfHealth\\\";\\n    bamm:preferredName \\\"State of Health\\\"@en;\\n    bamm:characteristic :PercentOfSomething.\\n:stateOfCharge a bamm:Property;\\n    bamm:name \\\"stateOfCharge\\\";\\n    bamm:characteristic :PercentOfSomething.\\n:mileage a bamm:Property;\\n    bamm:name \\\"mileage\\\";\\n    bamm:characteristic :Mileage;\\n    bamm:description \\\"The mileage stated by the vehicle\\\"@en.\\n:numberOfChargingCycles a bamm:Property;\\n    bamm:name \\\"numberOfChargingCycles\\\";\\n    bamm:characteristic :NumberOfCycles;\\n    bamm:exampleValue \\\"10000\\\"^^xsd:long.\\n:voltage a bamm:Property;\\n    bamm:name \\\"voltage\\\";\\n    bamm:characteristic :Voltage.\\n:residualCurrentHazard a bamm:Property;\\n    bamm:name \\\"residualCurrentHazard\\\";\\n    bamm:characteristic :Current;\\n    bamm:description \\\"The residual current still present.\\\"@en;\\n    bamm:exampleValue \\\"40\\\"^^xsd:double.\\n:LifeSpan a bamm-c:Quantifiable;\\n    bamm:name \\\"LifeSpan\\\";\\n    bamm:preferredName \\\"LifeSpan\\\"@en;\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"The Life Span\\\"@en;\\n    bamm-c:unit unit:year.\\n:PercentOfSomething a bamm-c:Quantifiable;\\n    bamm:name \\\"PercentOfSomething\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:percent.\\n:Mileage a bamm-c:Quantifiable;\\n    bamm:name \\\"Mileage\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:kilometre.\\n:NumberOfCycles a bamm:Characteristic;\\n    bamm:name \\\"NumberOfCycles\\\";\\n    bamm:dataType xsd:long.\\n:Voltage a bamm-c:Measurement;\\n    bamm:name \\\"Voltage\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:volt.\\n:Current a bamm-c:Measurement;\\n    bamm:name \\\"Current\\\";\\n    bamm:dataType xsd:double;\\n    bamm-c:unit unit:ampere.\\n:lifeSpanAsPlanned a bamm:Property;\\n    bamm:name \\\"lifeSpanAsPlanned\\\";\\n    bamm:characteristic :LifeSpan;\\n    bamm:description \\\"as planned lifeSpan for one specific vehicle\\\"@en.\\n:numberOfChargingCyclesAsPlanned a bamm:Property;\\n    bamm:name \\\"numberOfChargingCyclesAsPlanned\\\";\\n    bamm:characteristic :NumberOfCycles;\\n    bamm:description \\\"as planned number of charging cycles per planned life span\\\"@en.\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticServicesUrl}}/models",
									"host": [
										"{{semanticServicesUrl}}"
									],
									"path": [
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createReturnRequest",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.bosch.nexeed.digitaltwin:1.0.0#>.\\n\\n:ReturnRequest a bamm:Aspect;\\n    bamm:name \\\"ReturnRequest\\\";\\n    bamm:properties (:return);\\n    bamm:operations ();\\n    bamm:description \\\"Aspect to indicate if there is a return request for a material\\\"@en.\\n:return a bamm:Property;\\n    bamm:name \\\"return\\\";\\n    bamm:characteristic bamm-c:Boolean;\\n    bamm:description \\\"Describes the fact whether a vehicle, assembly or part needs to be returned to requestor.\\\"@en;\\n    bamm:exampleValue \\\"yes\\\"^^xsd:boolean.\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createTraceability",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix : <urn:bamm:com.catenaX:0.0.1#> .\\n\\n:Traceability a bamm:Aspect ;\\n   bamm:name \\\"Traceability\\\" ;\\n   bamm:preferredName \\\"Traceability\\\"@en ;\\n   bamm:description \\\"Traceability\\\"@en ;\\n   bamm:properties ( :staticData :uniqueData :individualData :supplierTree :partTree :qualityAlertData ) ;\\n   bamm:operations () .\\n\\n:individualData a bamm:Property ;\\n   bamm:name \\\"individualData\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:characteristic :PartIndividualDataCharacteristic .\\n\\n:PartIndividualDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartIndividualDataCharacteristic\\\" ;\\n   bamm:dataType :PartIndividualDataEntity .\\n\\n:PartIndividualDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartIndividualDataEntity\\\" ;\\n   bamm:preferredName \\\"Individual Data\\\"@en ;\\n   bamm:properties ( :productionCountryCode :productionDateGMT ) .\\n\\n:productionCountryCode a bamm:Property ;\\n   bamm:name \\\"productionCountryCode\\\" ;\\n   bamm:preferredName \\\"Country code of production\\\"@en ;\\n   bamm:description \\\"Country code of production\\\"@en ;\\n   bamm:characteristic :CountryCodeCharacteristic ;\\n   bamm:exampleValue \\\"HUR\\\" .\\n\\n:CountryCodeCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"CountryCodeCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:productionDateGMT a bamm:Property ;\\n   bamm:name \\\"productionDateGMT\\\" ;\\n   bamm:preferredName \\\"Production Date (GMT)\\\"@en ;\\n   bamm:description \\\"Production date without timestamp\\\"@en ;\\n   bamm:characteristic :DateWithoutTimestamp ;\\n   bamm:exampleValue \\\"2021-05-30\\\"^^xsd:date .\\n\\n:DateWithoutTimestamp a bamm:Characteristic ;\\n   bamm:name \\\"DateWithoutTimestamp\\\" ;\\n   bamm:preferredName \\\"Date (without timestamp)\\\"@en ;\\n   bamm:description \\\"Date without timestamp conformant to ISO 8601\\\"@en ;\\n   bamm:dataType xsd:date .\\n\\n:partTree a bamm:Property ;\\n   bamm:name \\\"partTree\\\" ;\\n   bamm:preferredName \\\"Part Tree Parent\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:supplierTree a bamm:Property ;\\n   bamm:name \\\"supplierTree\\\" ;\\n   bamm:preferredName \\\"Supplier Tree\\\"@en ;\\n   bamm:characteristic :PartTreeParentCharacteristic .\\n   \\n:PartTreeParentCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartTreeParentCharacteristic\\\" ;\\n   bamm:dataType :PartTreeParentEntity .\\n\\n:PartTreeParentEntity a bamm:Entity ;\\n   bamm:name \\\"PartTreeParentEntity\\\" ;\\n   bamm:properties ( :isParentOf ) .\\n\\n:isParentOf a bamm:Property ;\\n   bamm:name \\\"isParentOf\\\" ;\\n   bamm:preferredName \\\"is Parent of\\\"@en ;\\n   bamm:description \\\"Set of Parts, identified by ID\\\"@en ;\\n   bamm:characteristic :IsParentOfCharacteristic .\\n\\n:IsParentOfCharacteristic a bamm-c:Set ;\\n   bamm:name \\\"IsParentOfCharacteristic\\\" ;\\n   bamm:dataType :ProductReferenceEntity .\\n\\n:ProductReferenceEntity a bamm:Entity ;\\n   bamm:name \\\"ProductReferenceEntity\\\" ;\\n   bamm:properties ( :src :value ) ;\\n   bamm:preferredName \\\"Product Reference\\\"@en .\\n\\n:src a bamm:Property ;\\n   bamm:name \\\"src\\\" ;\\n   bamm:preferredName \\\"Product Reference Source\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:value a bamm:Property ;\\n   bamm:name \\\"value\\\" ;\\n   bamm:preferredName \\\"Product Reference Value\\\"@en ;\\n   bamm:characteristic :StringCharacteristic .\\n\\n:StringCharacteristic a bamm-c:Code ;\\n   bamm:name \\\"StringCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\\n:qualityAlertData a bamm:Property ;\\n   bamm:name \\\"qualityAlertData\\\" ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en ;\\n   bamm:characteristic :QualityAlertDataCharacteristic .\\n\\n:QualityAlertDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"QualityAlertDataCharacteristic\\\" ;\\n   bamm:dataType :QualityAlertDataEntity .\\n\\n:QualityAlertDataEntity a bamm:Entity ;\\n   bamm:name \\\"QualityAlertDataEntity\\\" ;\\n   bamm:properties ( :qualityAlert :qualityType ) ;\\n   bamm:preferredName \\\"Quality Alert Data\\\"@en .\\n\\n:qualityAlert a bamm:Property ;\\n   bamm:name \\\"qualityAlert\\\" ;\\n   bamm:preferredName \\\"Quality Alert\\\"@en ;\\n   bamm:characteristic bamm-c:Boolean ;\\n   bamm:exampleValue \\\"true\\\"^^xsd:boolean .\\n\\n:qualityType a bamm:Property ;\\n   bamm:name \\\"qualityType\\\" ;\\n   bamm:preferredName \\\"Quality Type\\\"@en ;\\n   bamm:characteristic :QualityTypeEnum ;\\n   bamm:exampleValue \\\"major\\\"^^xsd:string .\\n\\n:QualityTypeEnum a bamm-c:Enumeration ;\\n   bamm:name \\\"QualityTypeEnum\\\" ;\\n   bamm:dataType xsd:string ;\\n   bamm-c:values ( \\\"major\\\" \\\"minor\\\" \\\"critical\\\" ) .\\n\\n:staticData a bamm:Property ;\\n   bamm:name \\\"staticData\\\" ;\\n   bamm:preferredName \\\"Static Data\\\"@en ;\\n   bamm:characteristic :PartStaticDataCharacteristic .\\n\\n:PartStaticDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartStaticDataCharacteristic\\\" ;\\n   bamm:dataType :PartStaticDataEntity .\\n\\n:PartStaticDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartStaticDataEntity\\\" ;\\n   bamm:properties ( :customerContractOneID :customerOneID :manufacturerContractOneID :manufacturerOneID :partNameCustomer :partNameManufacturer :partNumberCustomer :partNumberManufacturer ) ;\\n   bamm:preferredName \\\"Static Data\\\"@en .\\n\\n:customerContractOneID a bamm:Property ;\\n   bamm:name \\\"customerContractOneID\\\" ;\\n   bamm:preferredName \\\"Customer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:customerOneID a bamm:Property ;\\n   bamm:name \\\"customerOneID\\\" ;\\n   bamm:preferredName \\\"Customer OneID\\\"@en ;\\n   bamm:description \\\"OneID of customer plant\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"CUSTOMER_ID\\\" .\\n\\n:manufacturerContractOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerContractOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Contract OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer contract partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner .\\n\\n:manufacturerOneID a bamm:Property ;\\n   bamm:name \\\"manufacturerOneID\\\" ;\\n   bamm:preferredName \\\"Manufacturer OneID\\\"@en ;\\n   bamm:description \\\"OneID of manufacturer partner\\\"@en ;\\n   bamm:characteristic :OneIDBusinessPartner ;\\n   bamm:exampleValue \\\"ERROR_CP\\\" .\\n\\n:partNameCustomer a bamm:Property ;\\n   bamm:name \\\"partNameCustomer\\\" ;\\n   bamm:preferredName \\\"Name of the product (customer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of customer\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"MIRROR_1\\\" .\\n\\n:partNameManufacturer a bamm:Property ;\\n   bamm:name \\\"partNameManufacturer\\\" ;\\n   bamm:preferredName \\\"Name of the product (manufacturer)\\\"@en ;\\n   bamm:description \\\"Name of the part family of manufacture\\\"@en ;\\n   bamm:characteristic bamm-c:Text ;\\n   bamm:exampleValue \\\"KLEBER1\\\" .\\n\\n:partNumberCustomer a bamm:Property ;\\n   bamm:name \\\"partNumberCustomer\\\" ;\\n   bamm:preferredName \\\"Part number (customer)\\\"@en ;\\n   bamm:description \\\"Type/Part No. of customer product\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic ;\\n   bamm:exampleValue \\\"1122334455\\\" .\\n\\n:partNumberManufacturer a bamm:Property ;\\n   bamm:name \\\"partNumberManufacturer\\\" ;\\n   bamm:preferredName \\\"Part number (manufacturer)\\\"@en ;\\n   bamm:description \\\"Number of part family of manufacture\\\"@en ;\\n   bamm:characteristic :PartNumberCharacteristic .\\n\\n:OneIDBusinessPartner a bamm-c:Code ;\\n   bamm:name \\\"OneIDBusinessPartner\\\" ;\\n   bamm:preferredName \\\"OneID BusinessPartner\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:PartNumberCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"PartNumberCharacteristic\\\" ;\\n   bamm:preferredName \\\"part number\\\"@en ;\\n   bamm:dataType xsd:string .\\n\\n:uniqueData a bamm:Property ;\\n   bamm:name \\\"uniqueData\\\" ;\\n   bamm:preferredName \\\"Unique Data\\\"@en ;\\n   bamm:characteristic :PartUniqueDataCharacteristic .\\n\\n:PartUniqueDataCharacteristic a bamm-c:SingleEntity ;\\n   bamm:name \\\"PartUniqueDataCharacteristic\\\" ;\\n   bamm:dataType :PartUniqueDataEntity .\\n\\n:PartUniqueDataEntity a bamm:Entity ;\\n   bamm:name \\\"PartUniqueDataEntity\\\" ;\\n   bamm:properties ( :customerUniqueID :manufacturerUniqueID :uniqueID ) ;\\n   bamm:preferredName \\\"Unique Data Entity\\\"@en .\\n\\n:customerUniqueID a bamm:Property ;\\n   bamm:name \\\"customerUniqueID\\\" ;\\n   bamm:preferredName \\\"Customer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. Of customer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"333\\\" .\\n\\n:manufacturerUniqueID a bamm:Property ;\\n   bamm:name \\\"manufacturerUniqueID\\\" ;\\n   bamm:preferredName \\\"Manufacturer Unique ID\\\"@en ;\\n   bamm:description \\\"SerialNo. of manufacturer\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"Xxx\\\" .\\n\\n:uniqueID a bamm:Property ;\\n   bamm:name \\\"uniqueID\\\" ;\\n   bamm:preferredName \\\"unique ID\\\"@en ;\\n   bamm:description \\\"this is a local unique ID to identiy the part\\\"@en ;\\n   bamm:characteristic :IdCharacteristic ;\\n   bamm:exampleValue \\\"1AB\\\" .\\n\\n:IdCharacteristic a bamm:Characteristic ;\\n   bamm:name \\\"IdCharacteristic\\\" ;\\n   bamm:dataType xsd:string .\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createGDPM",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#> .\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:OneIDBusinessPartner a bamm-c:Code;\\n    bamm:name \\\"OneIDBusinessPartner\\\";\\n    bamm:preferredName \\\"OneID BusinessPartner\\\"@en;\\n    bamm:dataType xsd:string.\\n:GPDMAspectPoC a bamm:Aspect;\\n    bamm:name \\\"GPDMAspectPoC\\\";\\n    bamm:preferredName \\\"GPDM Aspect\\\"@en;\\n    bamm:properties ([\\n  bamm:property :businessPartnerData;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :contactData);\\n    bamm:operations ().\\n:businessPartnerData a bamm:Property;\\n    bamm:name \\\"businessPartnerData\\\";\\n    bamm:preferredName \\\"Business Partner Data\\\"@en;\\n    bamm:characteristic :BusinessPartnerDataCharacteristic.\\n:BusinessPartnerDataEntity a bamm:Entity;\\n    bamm:name \\\"BusinessPartnerDataEntity\\\";\\n    bamm:properties ([\\n  bamm:property :oneId;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :businessPartnerType :businessPartnerNames).\\n:BusinessPartnerDataCharacteristic a bamm-c:SingleEntity;\\n    bamm:name \\\"BusinessPartnerDataCharacteristic\\\";\\n    bamm:dataType :BusinessPartnerDataEntity.\\n:oneId a bamm:Property;\\n    bamm:name \\\"oneId\\\";\\n    bamm:preferredName \\\"oneID\\\"@en;\\n    bamm:characteristic :OneIDBusinessPartner.\\n:businessPartnerType a bamm:Property;\\n    bamm:name \\\"businessPartnerType\\\";\\n    bamm:preferredName \\\"businessPartnerType\\\"@en;\\n    bamm:characteristic :BusinessPartnerTypeCharacteristic.\\n:BusinessPartnerTypeCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"BusinessPartnerTypeCharacteristic\\\";\\n    bamm:dataType xsd:string.\\n:SetOfBusinessPartnerName a bamm-c:Set;\\n    bamm:name \\\"SetOfBusinessPartnerName\\\";\\n    bamm:preferredName \\\"Business Partner Names\\\"@en;\\n    bamm:dataType :BusinessPartnerName.\\n:BusinessPartnerName a bamm:Entity;\\n    bamm:name \\\"BusinessPartnerName\\\";\\n    bamm:preferredName \\\"Business Partner Name\\\"@en;\\n    bamm:properties (:name :type :legalForm).\\n:name a bamm:Property;\\n    bamm:name \\\"name\\\";\\n    bamm:preferredName \\\"Name\\\"@en;\\n    bamm:characteristic bamm-c:Text.\\n:type a bamm:Property;\\n    bamm:name \\\"type\\\";\\n    bamm:preferredName \\\"Type\\\"@en;\\n    bamm:characteristic :BusinessPartnerNameTypeEnum;\\n    bamm:exampleValue \\\"registered_name\\\".\\n:BusinessPartnerNameTypeEnum a bamm-c:Enumeration;\\n    bamm:name \\\"BusinessPartnerNameTypeEnum\\\";\\n    bamm:preferredName \\\"BusinessPartnerNameTypeEnum\\\"@en;\\n    bamm:dataType xsd:string;\\n    bamm-c:values (\\\"registered_name\\\" \\\"local_name\\\" \\\"international_name\\\" \\\"transliterated_name\\\" \\\"DBA_name\\\" \\\"VAT_registered_name\\\").\\n:legalForm a bamm:Property;\\n    bamm:name \\\"legalForm\\\";\\n    bamm:preferredName \\\"Legal Form\\\"@en;\\n    bamm:characteristic bamm-c:Text.\\n:businessPartnerNames a bamm:Property;\\n    bamm:name \\\"businessPartnerNames\\\";\\n    bamm:preferredName \\\"businessPartnerNames\\\"@en;\\n    bamm:characteristic :SetOfBusinessPartnerName.\\n:contactData a bamm:Property;\\n    bamm:name \\\"contactData\\\";\\n    bamm:preferredName \\\"contactData\\\"@en;\\n    bamm:characteristic :ContactDataCharacteristic.\\n:ContactDataCharacteristic a bamm-c:SingleEntity;\\n    bamm:name \\\"ContactDataCharacteristic\\\";\\n    bamm:dataType :ContactDataEntity.\\n:ContactDataEntity a bamm:Entity;\\n    bamm:name \\\"ContactDataEntity\\\";\\n    bamm:preferredName \\\"ContactDataEntity\\\"@en;\\n    bamm:properties ([\\n  bamm:property :eMailAddress;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] [\\n  bamm:property :url;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:eMailAddress a bamm:Property;\\n    bamm:name \\\"eMailAddress\\\";\\n    bamm:preferredName \\\"eMailAddress\\\"@en;\\n    bamm:characteristic :EMailAddressTrait.\\n:url a bamm:Property;\\n    bamm:name \\\"url\\\";\\n    bamm:preferredName \\\"URL\\\"@en;\\n    bamm:characteristic bamm-c:ResourcePath.\\n:EMailCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"EMailCharacteristic\\\";\\n    bamm:preferredName \\\"EMailCharacteristic\\\"@en;\\n    bamm:dataType xsd:string.\\n:EMailAddressTrait a bamm-c:Trait;\\n    bamm:name \\\"EMailAddressTrait\\\";\\n    bamm-c:baseCharacteristic :EMailCharacteristic;\\n    bamm-c:constraint :RegularExpressionForEMail.\\n:RegularExpressionForEMail a bamm-c:RegularExpressionConstraint;\\n    bamm:name \\\"RegularExpressionForEMail\\\";\\n    bamm:preferredName \\\"RegularExpressionForEMail\\\"@en;\\n    bamm:value \\\"tbd\\\".\\n\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createDigitalTwin",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"#\\n# Copyright (c) 2021 T-Systems International GmbH (Catena-X Consortium)\\n#\\n# See the AUTHORS file(s) distributed with this work for additional\\n# information regarding authorship.\\n#\\n# See the LICENSE file(s) distributed with this work for\\n# additional information regarding license terms.\\n#\\n\\n@prefix : <urn:bamm:net.catenax.semantics:1.0.0#> .\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#> .\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#> .\\n@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .\\n\\n:DigitalTwin a bamm:Aspect ;\\n   bamm:name \\\"DigitalTwin\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin\\\"@en ;\\n   bamm:description \\\"The Digital Twin is a virtual representation of assets. The DT has at least one Catena-X-wide unique ID. Digital Twins are organized by a set of Aspects which include both structural as well as behavioral data and models (including operations and simulation models).\\\"@en ;\\n   bamm:properties ( :manufacturer :localIdentifiers :modelReference :httpEndpoints) ;\\n   bamm:operations ( ) .\\n\\n:manufacturer a bamm:Property ;\\n   bamm:name \\\"manufacturer\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin Manufacturer\\\"@en ;\\n   bamm:description \\\"The manufacturer (registrar) of a digital twin.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:localIdentifiers a bamm:Property ;\\n   bamm:name \\\"localIdentifiers\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin Local Identifiers\\\"@en ;\\n   bamm:description \\\"A set of individual business-local identifiers which (as a union) identify the Digital Twin.\\\"@en ;\\n   bamm:characteristic :LocalIdentifierList .\\n\\n:LocalIdentifierList a bamm-c:List ;\\n   bamm:name \\\"LocalIdentifierList\\\" ;\\n   bamm:preferredName \\\"Local Identifiers List\\\"@en ;\\n   bamm:description \\\"A list of business-local identifiers.\\\"@en ;\\n   bamm:dataType :LocalIdentifier .\\n\\n:LocalIdentifier a bamm:Entity ;\\n   bamm:name \\\"LocalIdentifier\\\" ;\\n   bamm:preferredName \\\"Local Identifier\\\"@en ;\\n   bamm:description \\\"A business-local identifier has a namespace (key) and a local name (value) component.\\\"@en ;\\n   bamm:properties ( :key :value) .\\n\\n:key a bamm:Property ;\\n   bamm:name \\\"key\\\" ;\\n   bamm:preferredName \\\"Identifier Key\\\"@en ;\\n   bamm:description \\\"The key (domain, namespace) component of an identifier.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:value a bamm:Property ;\\n   bamm:name \\\"value\\\" ;\\n   bamm:preferredName \\\"Identifier Value\\\"@en ;\\n   bamm:description \\\"The value (name) component of an identifier.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:aspects a bamm:Property ;\\n   bamm:name \\\"aspects\\\" ;\\n   bamm:preferredName \\\"(Digital) Twin Aspects\\\"@en ;\\n   bamm:description \\\"A set of Aspects which represent concrete interfaces to the assets of a Digital Twin.\\\"@en ;\\n   bamm:characteristic :AspectList .\\n\\n:AspectList a bamm-c:List ;\\n   bamm:name \\\"AspectList\\\" ;\\n   bamm:preferredName \\\"Aspect List\\\"@en ;\\n   bamm:description \\\"A list of Aspects.\\\"@en ;\\n   bamm:dataType :Aspect .\\n\\n:Aspect a bamm:Entity ;\\n   bamm:name \\\"Aspect\\\" ;\\n   bamm:preferredName \\\"Aspect\\\"@en ;\\n   bamm:description \\\"An Aspect includes both structural as well as behavioral data and models (including operations and simulation models).\\\"@en ;\\n   bamm:properties ( :modelReference :httpEndpoints ) .\\n\\n:modelReference a bamm:Property ;\\n   bamm:name \\\"modelReference\\\" ;\\n   bamm:preferredName \\\"Aspect Model Reference\\\"@en ;\\n   bamm:description \\\"The reference to the semantic model describing the structural and behavioural asset.\\\"@en ;\\n   bamm:characteristic :ModelReferenceSingle .\\n\\n:ModelReferenceSingle a bamm-c:SingleEntity ;\\n   bamm:name \\\"ModelReferenceSingle\\\" ;\\n   bamm:preferredName \\\"Model Reference\\\"@en ;\\n   bamm:description \\\"A single Model Reference.\\\"@en ;\\n   bamm:dataType :ModelReference .\\n\\n:ModelReference a bamm:Entity ;\\n   bamm:name \\\"Model Reference\\\" ;\\n   bamm:preferredName \\\"Model Reference\\\"@en ;\\n   bamm:description \\\"An Model Reference describes a semantic model.\\\"@en ;\\n   bamm:properties ( :urn ) .\\n\\n:urn a bamm:Property ;\\n   bamm:name \\\"urn\\\" ;\\n   bamm:preferredName \\\"Model Reference URN\\\"@en ;\\n   bamm:description \\\"Unique resource name following [rfc2141] belonging to a [Model] registered in the [SemanticHub].\\\"@en ;\\n   bamm:characteristic bamm-c:ResourcePath .\\n\\n:httpEndpoints a bamm:Property ;\\n   bamm:name \\\"httpEndpoints\\\" ;\\n   bamm:preferredName \\\"Aspect Endpoints (HTTTP)\\\"@en ;\\n   bamm:description \\\"Protocol-specific set of endpoints providing aspect interfaces.\\\"@en;\\n   bamm:characteristic :EndpointList .\\n\\n:EndpointList a bamm-c:List ;\\n   bamm:name \\\"EndpointList\\\" ;\\n   bamm:preferredName \\\"Endpoint List\\\"@en ;\\n   bamm:description \\\"A list of Endpoints.\\\"@en ;\\n   bamm:dataType :Endpoint .\\n\\n:Endpoint a bamm:Entity ;\\n   bamm:name \\\"Endpoint\\\" ;\\n   bamm:preferredName \\\"Endpoint\\\"@en ;\\n   bamm:description \\\"An endpoint describes how to connect to a particular asset in the given protocol.\\\"@en ;\\n   bamm:properties ( :method :url ) .\\n\\n:method a bamm:Property ;\\n   bamm:name \\\"method\\\" ;\\n   bamm:preferredName \\\"Endpoint Method\\\"@en ;\\n   bamm:description \\\"A connection method according to the protocol.\\\"@en ;\\n   bamm:characteristic bamm-c:Text .\\n\\n:url a bamm:Property ;\\n   bamm:name \\\"url\\\" ;\\n   bamm:preferredName \\\"Endpoint URL\\\"@en ;\\n   bamm:description \\\"Unique resource location following [rfc2141] and compatible with the given protocol.\\\"@en ;\\n   bamm:characteristic bamm-c:ResourcePath .\\n\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createMaterial",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:Material a bamm:Aspect;\\n    bamm:name \\\"Material\\\";\\n    bamm:operations ();\\n    bamm:properties (:materialDetails).\\n:materialDetails a bamm:Property;\\n    bamm:name \\\"materialDetails\\\";\\n    bamm:characteristic :MaterialCharacteristic.\\n:MaterialCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"MaterialCharacteristic\\\";\\n    bamm:dataType :MaterialEntity.\\n:MaterialEntity a bamm:Entity;\\n    bamm:name \\\"MaterialEntity\\\";\\n    bamm:properties (:materialName :materialType :aggregateState [\\n  bamm:property :chemicalComposition;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :weight [\\n  bamm:property :chemicalCompositionFraction;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:materialName a bamm:Property;\\n    bamm:name \\\"materialName\\\";\\n    bamm:characteristic :MaterialNamesEnumeration;\\n    bamm:description \\\"The name of a material\\\"@en;\\n    bamm:exampleValue \\\"aluminium\\\".\\n:materialType a bamm:Property;\\n    bamm:name \\\"materialType\\\";\\n    bamm:characteristic :MaterialTypesEnumeration;\\n    bamm:description \\\"The type of a material\\\"@en;\\n    bamm:exampleValue \\\"metal\\\".\\n:aggregateState a bamm:Property;\\n    bamm:name \\\"aggregateState\\\";\\n    bamm:characteristic :AggregateStatesEnumeration;\\n    bamm:description \\\"The aggregate state of a material at ambient conditions\\\"@en;\\n    bamm:exampleValue \\\"solid\\\".\\n:chemicalComposition a bamm:Property;\\n    bamm:name \\\"chemicalComposition\\\";\\n    bamm:characteristic :materialCollection.\\n:materialCollection a bamm-c:Collection;\\n    bamm:name \\\"materialCollection\\\";\\n    bamm-c:elementCharacteristic :MaterialCharacteristic.\\n:MaterialNamesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialNamesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible material names\\\"@en;\\n    bamm-c:values (\\\"aluminium\\\" \\\"polyamide\\\" \\\"composite\\\" \\\"synthetic rubber\\\" \\\"chromed plastic\\\" \\\"others\\\" \\\"Aluminium (Metall)\\\" \\\"Anode Copper\\\" \\\"Carbon Steel (1008)\\\" \\\"Cathode Aluminium\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Eisen\\\" \\\"Kleber\\\" \\\"Material_1768\\\" \\\"Material_23315\\\" \\\"Material_2812\\\" \\\"Material_2889\\\" \\\"Material_3367\\\" \\\"Material_728088751\\\" \\\"Material_781\\\" \\\"Material_9999\\\" \\\"Paraffinwachse und Kohlenwasserstoffwachse, oxidiert, Lithiumsalze\\\" \\\"Polyamid 6\\\" \\\"Polyethylen\\\").\\n:MaterialTypesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialTypesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible types of a material\\\"@en;\\n    bamm-c:values (\\\"metal\\\" \\\"plastic\\\" \\\"composite\\\" \\\"rubber\\\" \\\"other\\\" \\\"Adhesives, sealants\\\" \\\"Aluminium and aluminium alloys\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Lubricants\\\" \\\"Plastics\\\" \\\"Steels / cast steels / sintered steel\\\" \\\"Washing water, battery acids\\\" \\\"highly alloyed\\\").\\n:AggregateStatesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"AggregateStatesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible aggregate states\\\"@en;\\n    bamm-c:values (\\\"gas\\\" \\\"liquid\\\" \\\"solid\\\").\\n:weight a bamm:Property;\\n    bamm:name \\\"weight\\\";\\n    bamm:characteristic :Weight.\\n:Weight a bamm-c:Quantifiable;\\n    bamm:name \\\"Weight\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Weight of the material\\\"@en;\\n    bamm-c:unit unit:kilogram.\\n:chemicalCompositionFraction a bamm:Property;\\n    bamm:name \\\"chemicalCompositionFraction\\\";\\n    bamm:characteristic :Fraction;\\n    bamm:description \\\"Fraction of the material in a chemical composition. Is not set if material is not part of a material composition.\\\"@en;\\n    bamm:exampleValue \\\"0.23\\\"^^xsd:double.\\n:Fraction a bamm:Characteristic;\\n    bamm:name \\\"Fraction\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Fraction of something\\\"@en.\\n:Constraint1 a bamm:Constraint;\\n    bamm:name \\\"Constraint1\\\".\\n:Constraint2 a bamm:Constraint;\\n    bamm:name \\\"Constraint2\\\".\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createDocumentation",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:Material a bamm:Aspect;\\n    bamm:name \\\"Material\\\";\\n    bamm:operations ();\\n    bamm:properties (:materialDetails).\\n:materialDetails a bamm:Property;\\n    bamm:name \\\"materialDetails\\\";\\n    bamm:characteristic :MaterialCharacteristic.\\n:MaterialCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"MaterialCharacteristic\\\";\\n    bamm:dataType :MaterialEntity.\\n:MaterialEntity a bamm:Entity;\\n    bamm:name \\\"MaterialEntity\\\";\\n    bamm:properties (:materialName :materialType :aggregateState [\\n  bamm:property :chemicalComposition;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :weight [\\n  bamm:property :chemicalCompositionFraction;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:materialName a bamm:Property;\\n    bamm:name \\\"materialName\\\";\\n    bamm:characteristic :MaterialNamesEnumeration;\\n    bamm:description \\\"The name of a material\\\"@en;\\n    bamm:exampleValue \\\"aluminium\\\".\\n:materialType a bamm:Property;\\n    bamm:name \\\"materialType\\\";\\n    bamm:characteristic :MaterialTypesEnumeration;\\n    bamm:description \\\"The type of a material\\\"@en;\\n    bamm:exampleValue \\\"metal\\\".\\n:aggregateState a bamm:Property;\\n    bamm:name \\\"aggregateState\\\";\\n    bamm:characteristic :AggregateStatesEnumeration;\\n    bamm:description \\\"The aggregate state of a material at ambient conditions\\\"@en;\\n    bamm:exampleValue \\\"solid\\\".\\n:chemicalComposition a bamm:Property;\\n    bamm:name \\\"chemicalComposition\\\";\\n    bamm:characteristic :materialCollection.\\n:materialCollection a bamm-c:Collection;\\n    bamm:name \\\"materialCollection\\\";\\n    bamm-c:elementCharacteristic :MaterialCharacteristic.\\n:MaterialNamesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialNamesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible material names\\\"@en;\\n    bamm-c:values (\\\"aluminium\\\" \\\"polyamide\\\" \\\"composite\\\" \\\"synthetic rubber\\\" \\\"chromed plastic\\\" \\\"others\\\" \\\"Aluminium (Metall)\\\" \\\"Anode Copper\\\" \\\"Carbon Steel (1008)\\\" \\\"Cathode Aluminium\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Eisen\\\" \\\"Kleber\\\" \\\"Material_1768\\\" \\\"Material_23315\\\" \\\"Material_2812\\\" \\\"Material_2889\\\" \\\"Material_3367\\\" \\\"Material_728088751\\\" \\\"Material_781\\\" \\\"Material_9999\\\" \\\"Paraffinwachse und Kohlenwasserstoffwachse, oxidiert, Lithiumsalze\\\" \\\"Polyamid 6\\\" \\\"Polyethylen\\\").\\n:MaterialTypesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialTypesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible types of a material\\\"@en;\\n    bamm-c:values (\\\"metal\\\" \\\"plastic\\\" \\\"composite\\\" \\\"rubber\\\" \\\"other\\\" \\\"Adhesives, sealants\\\" \\\"Aluminium and aluminium alloys\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Lubricants\\\" \\\"Plastics\\\" \\\"Steels / cast steels / sintered steel\\\" \\\"Washing water, battery acids\\\" \\\"highly alloyed\\\").\\n:AggregateStatesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"AggregateStatesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible aggregate states\\\"@en;\\n    bamm-c:values (\\\"gas\\\" \\\"liquid\\\" \\\"solid\\\").\\n:weight a bamm:Property;\\n    bamm:name \\\"weight\\\";\\n    bamm:characteristic :Weight.\\n:Weight a bamm-c:Quantifiable;\\n    bamm:name \\\"Weight\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Weight of the material\\\"@en;\\n    bamm-c:unit unit:kilogram.\\n:chemicalCompositionFraction a bamm:Property;\\n    bamm:name \\\"chemicalCompositionFraction\\\";\\n    bamm:characteristic :Fraction;\\n    bamm:description \\\"Fraction of the material in a chemical composition. Is not set if material is not part of a material composition.\\\"@en;\\n    bamm:exampleValue \\\"0.23\\\"^^xsd:double.\\n:Fraction a bamm:Characteristic;\\n    bamm:name \\\"Fraction\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Fraction of something\\\"@en.\\n:Constraint1 a bamm:Constraint;\\n    bamm:name \\\"Constraint1\\\".\\n:Constraint2 a bamm:Constraint;\\n    bamm:name \\\"Constraint2\\\".\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "createMovement",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenax:0.0.2#>.\\n \\n:Movement a bamm:Aspect ;\\n    bamm:name \\\"Movement\\\" ;\\n    bamm:preferredName \\\"Movement\\\"@en ;\\n    bamm:description \\\"Aspect for movement information\\\"@en ;\\n    bamm:properties ( :moving :speedLimitWarning :position ) ;\\n    bamm:operations ( ) .\\n \\n:moving a bamm:Property ;\\n    bamm:name \\\"moving\\\" ;\\n    bamm:preferredName \\\"Moving\\\"@en ;\\n    bamm:description \\\"Flag indicating if the position is changing\\\"@en ;\\n    bamm:characteristic bamm-c:Boolean .\\n \\n:speedLimitWarning a bamm:Property ;\\n    bamm:name \\\"speedLimitWarning\\\" ;\\n    bamm:preferredName \\\"Speed Limit Warning\\\"@en ;\\n    bamm:description \\\"Indicats if speed limit is adhered to.\\\"@en ;\\n    bamm:characteristic :WarningLevel .\\n \\n:position a bamm:Property ;\\n    bamm:name \\\"position\\\" ;\\n    bamm:preferredName \\\"Position\\\"@en ;\\n    bamm:description \\\"Indicates a position\\\"@en ;\\n    bamm:characteristic [\\n                          a bamm-c:SingleEntity ;\\n                          bamm:name \\\"SpatialPositionCharacteristic\\\" ;\\n                          bamm:preferredName \\\"Spatial Position Characteristic\\\"@en ;\\n                          bamm:description \\\"Represents a single location in space.\\\"@en ;\\n                          bamm:dataType :SpatialPosition\\n                      ] .\\n \\n:WarningLevel a bamm-c:Enumeration ;\\n    bamm:name \\\"WarningLevel\\\" ;\\n    bamm:preferredName \\\"Warning Level\\\"@en ;\\n    bamm:description \\\"Represents if speed of position change is within specification (green), within tolerance (yellow), or outside specification (red).\\\"@en ;\\n    bamm:dataType xsd:string ;\\n    bamm-c:values ( \\\"green\\\" \\\"yellow\\\" \\\"red\\\" ) .\\n \\n:SpatialPosition a bamm:Entity ;\\n    bamm:name \\\"SpatialPosition\\\" ;\\n    bamm:preferredName \\\"Spatial Position\\\"@en ;\\n    bamm:description \\\"Position in space, described along three axis, with the third axis optional, if all positions are in a plane.\\\"@en ;\\n    bamm:properties ( :x :y [ bamm:property :z; bamm:optional true ] ) .\\n \\n:x a bamm:Property ;\\n    bamm:name \\\"x\\\" ;\\n    bamm:preferredName \\\"x\\\"@en ;\\n    bamm:description \\\"x coordinate in space\\\"@en ;\\n    bamm:characteristic :Coordinate .\\n \\n:y a bamm:Property ;\\n    bamm:name \\\"y\\\" ;\\n    bamm:preferredName \\\"y\\\"@en ;\\n    bamm:description \\\"y coordinate in space\\\"@en ;\\n    bamm:characteristic :Coordinate .\\n \\n:z a bamm:Property ;\\n    bamm:name \\\"z\\\" ;\\n    bamm:preferredName \\\"z\\\"@en ;\\n    bamm:description \\\"z coordinate in space\\\"@en ;\\n    bamm:characteristic :Coordinate .\\n \\n:Coordinate a bamm-c:Measurement ;\\n    bamm:name \\\"Coordinate\\\" ;\\n    bamm:preferredName \\\"Coordinate\\\"@en ;\\n    bamm:description \\\"Represents a coordinate along an axis in space.\\\"@en ;\\n    bamm:dataType xsd:float ;\\n    bamm-c:unit unit:metre .\",\n    \"private\": false,\n    \"type\": \"BAMM\",\n    \"publisher\":\"ME\",\n    \"status\":\"DRAFT\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "PartTypization",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{ \"private\": false, \"publisher\":\"Catena-X Consortium\", \"status\":\"DRAFT\", \"type\": \"BAMM\", \"model\":\" @prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:QualityTypeEnum a bamm-c:Enumeration;\\n bamm:name \\\"QualityTypeEnum\\\";\\n bamm:dataType xsd:string;\\n bamm-c:values (\\\"major\\\" \\\"minor\\\" \\\"critical\\\").\\n:LocalIdentifierCharacteristics a bamm:Characteristic;\\n bamm:name \\\"LocalIdentifierCharacteristics\\\";\\n bamm:preferredName \\\"Local Identifier Characteristics\\\"@en;\\n bamm:dataType :LocalIdentifier.\\n:LocalIdentifier a bamm:Entity;\\n bamm:name \\\"LocalIdentifier\\\";\\n bamm:preferredName \\\"Local Identifier\\\"@en;\\n bamm:properties (:key :value);\\n bamm:description \\\"A business-local identifier has a namespace (key) and a local name (value) component.\\\"@en.\\n:key a bamm:Property;\\n bamm:name \\\"key\\\";\\n bamm:preferredName \\\"Identifier Key\\\"@en;\\n bamm:characteristic bamm-c:Text;\\n bamm:description \\\"The key (domain, namespace) component of an identifier.\\\"@en.\\n:value a bamm:Property;\\n bamm:name \\\"value\\\";\\n bamm:preferredName \\\"Identifier Value\\\"@en;\\n bamm:characteristic bamm-c:Text;\\n bamm:description \\\"The value (name) component of an identifier.\\\"@en.\\n:partName a bamm:Property;\\n bamm:name \\\"partName\\\";\\n bamm:preferredName \\\"partNameCustomer\\\"@en;\\n bamm:characteristic bamm-c:Text;\\n bamm:description \\\"Name of the part, as defined by the customer\\\"@en;\\n bamm:exampleValue \\\"MIRROR LEFT\\\".\\n:cxUniqueId a bamm:Property;\\n bamm:name \\\"cxUniqueId\\\";\\n bamm:preferredName \\\"Catena-X Unique ID\\\"@en;\\n bamm:characteristic :Trait1.\\n:Trait1 a bamm-c:Trait;\\n bamm:name \\\"Trait1\\\";\\n bamm-c:baseCharacteristic :CxUniqueId;\\n bamm-c:constraint :CxUniqueIdRegEx.\\n:PartTypization a bamm:Aspect;\\n bamm:name \\\"PartTypization\\\";\\n bamm:preferredName \\\"Part\\\"@en;\\n bamm:properties (:cxUniqueId :localIdentifier :partName [\\n bamm:property :partNameCustomer;\\n bamm:optional \\\"true\\\"^^xsd:boolean\\n] :createdOn [\\n bamm:property :modifiedOn;\\n bamm:optional \\\"true\\\"^^xsd:boolean\\n] [\\n bamm:property :releasedOn;\\n bamm:optional \\\"true\\\"^^xsd:boolean\\n] [\\n bamm:property :classification;\\n bamm:optional \\\"true\\\"^^xsd:boolean\\n] :version [\\n bamm:property :usage;\\n bamm:optional \\\"true\\\"^^xsd:boolean\\n] :description);\\n bamm:description \\\"A part, i.e. a non-serialized object (\\\\\\\"Katalogteil\\\\\\\")\\\"@en;\\n bamm:operations ().\\n:CxUniqueId a bamm:Characteristic;\\n bamm:name \\\"CxUniqueId\\\";\\n bamm:preferredName \\\"Catena-X Unique ID\\\"@en;\\n bamm:dataType xsd:string;\\n bamm:description \\\"The Catena-X Unique ID is a UUID v4, which is globally unique in Catena-X dataspace\\\"@en.\\n:CxUniqueIdRegEx a bamm-c:RegularExpressionConstraint;\\n bamm:name \\\"CxUniqueIdRegEx\\\";\\n bamm:preferredName \\\"Catena-X UniqueId RegEx\\\"@en;\\n bamm:description \\\"Regular Expression for UUID v4\\\"@en;\\n bamm:value \\\"^[0-9a-fA-F]{8}\\\\\\\\\\\\\\\\b-[0-9a-fA-F]{4}\\\\\\\\\\\\\\\\b-[0-9a-fA-F]{4}\\\\\\\\\\\\\\\\b-[0-9a-fA-F]{4}\\\\\\\\\\\\\\\\b-[0-9a-fA-F]{12}$\\\".\\n:localIdentifier a bamm:Property;\\n bamm:name \\\"localIdentifier\\\";\\n bamm:preferredName \\\"local Identifiers\\\"@en;\\n bamm:characteristic :LocalIdentifierCharacteristics;\\n bamm:description \\\"A key value list of attributes, that uniquely identify the part in the manufacturers dataspace e.g. a part number\\\"@en.\\n:partNameCustomer a bamm:Property;\\n bamm:name \\\"partNameCustomer\\\";\\n bamm:preferredName \\\"Part Name Customer\\\"@en;\\n bamm:characteristic bamm-c:Text;\\n bamm:description \\\"Name of the part, as assigned by the customer of the part\\\"@en;\\n bamm:exampleValue \\\"Mirror left\\\".\\n:createdOn a bamm:Property;\\n bamm:name \\\"createdOn\\\";\\n bamm:preferredName \\\"Creation Date\\\"@en;\\n bamm:characteristic :DateWithoutTime;\\n bamm:exampleValue \\\"2021-12-15\\\"^^xsd:date.\\n:modifiedOn a bamm:Property;\\n bamm:name \\\"modifiedOn\\\";\\n bamm:preferredName \\\"Modification Date\\\"@en;\\n bamm:characteristic :DateWithoutTime;\\n bamm:exampleValue \\\"2021-12-16\\\"^^xsd:date.\\n:releasedOn a bamm:Property;\\n bamm:name \\\"releasedOn\\\";\\n bamm:preferredName \\\"Release Date\\\"@en;\\n bamm:characteristic :DateWithoutTime;\\n bamm:exampleValue \\\"2021-12-17\\\"^^xsd:date.\\n:DateWithoutTime a bamm-c:TimeSeries;\\n bamm:name \\\"DateWithoutTime\\\";\\n bamm:dataType xsd:date.\\n:classification a bamm:Property;\\n bamm:name \\\"classification\\\";\\n bamm:preferredName \\\"Classification\\\"@en;\\n bamm:characteristic :Classification.\\n:version a bamm:Property;\\n bamm:name \\\"version\\\";\\n bamm:preferredName \\\"Version\\\"@en;\\n bamm:characteristic :Version;\\n bamm:description \\\"Version of the part\\\"@en.\\n:usage a bamm:Property;\\n bamm:name \\\"usage\\\";\\n bamm:preferredName \\\"Usage\\\"@en;\\n bamm:characteristic :Usage.\\n:description a bamm:Property;\\n bamm:name \\\"description\\\";\\n bamm:preferredName \\\"Description\\\"@en;\\n bamm:characteristic :Description;\\n bamm:description \\\"The description of the part\\\"@en.\\n:Usage a bamm-c:Enumeration;\\n bamm:name \\\"Usage\\\";\\n bamm:preferredName \\\"Usage\\\"@en;\\n bamm:dataType xsd:string;\\n bamm-c:values (\\\"as-designed\\\" \\\"as-planned\\\" \\\"as-built\\\" \\\"as-maintained\\\" \\\"as-recycled\\\");\\n bamm:description \\\"The lifecycle usage of the part\\\"@en.\\n:Description a bamm:Characteristic;\\n bamm:name \\\"Description\\\";\\n bamm:preferredName \\\"Description\\\"@en;\\n bamm:dataType xsd:string.\\n:Classification a bamm-c:Enumeration;\\n bamm:name \\\"Classification\\\";\\n bamm:preferredName \\\"Classification\\\"@en;\\n bamm:dataType xsd:string;\\n bamm-c:values (\\\"Assembly\\\" \\\"Component\\\").\\n:Version a bamm:Characteristic;\\n bamm:name \\\"Version\\\";\\n bamm:preferredName \\\"Version\\\"@en;\\n bamm:dataType xsd:string. \"}\n"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "OK",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "POST",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "modifyMaterial",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"model\": \"@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.\\n@prefix bamm: <urn:bamm:io.openmanufacturing:meta-model:1.0.0#>.\\n@prefix unit: <urn:bamm:io.openmanufacturing:unit:1.0.0#>.\\n@prefix bamm-c: <urn:bamm:io.openmanufacturing:characteristic:1.0.0#>.\\n@prefix bamm-e: <urn:bamm:io.openmanufacturing:entity:1.0.0#>.\\n@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.\\n@prefix : <urn:bamm:com.catenaX:0.0.1#>.\\n\\n:Material a bamm:Aspect;\\n    bamm:name \\\"Material\\\";\\n    bamm:operations ();\\n    bamm:properties (:materialDetails).\\n:materialDetails a bamm:Property;\\n    bamm:name \\\"materialDetails\\\";\\n    bamm:characteristic :MaterialCharacteristic.\\n:MaterialCharacteristic a bamm:Characteristic;\\n    bamm:name \\\"MaterialCharacteristic\\\";\\n    bamm:dataType :MaterialEntity.\\n:MaterialEntity a bamm:Entity;\\n    bamm:name \\\"MaterialEntity\\\";\\n    bamm:properties (:materialName :materialType :aggregateState [\\n  bamm:property :chemicalComposition;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n] :weight [\\n  bamm:property :chemicalCompositionFraction;\\n  bamm:optional \\\"true\\\"^^xsd:boolean\\n]).\\n:materialName a bamm:Property;\\n    bamm:name \\\"materialName\\\";\\n    bamm:characteristic :MaterialNamesEnumeration;\\n    bamm:description \\\"The name of a material\\\"@en;\\n    bamm:exampleValue \\\"aluminium\\\".\\n:materialType a bamm:Property;\\n    bamm:name \\\"materialType\\\";\\n    bamm:characteristic :MaterialTypesEnumeration;\\n    bamm:description \\\"The type of a material\\\"@en;\\n    bamm:exampleValue \\\"metal\\\".\\n:aggregateState a bamm:Property;\\n    bamm:name \\\"aggregateState\\\";\\n    bamm:characteristic :AggregateStatesEnumeration;\\n    bamm:description \\\"The aggregate state of a material at ambient conditions\\\"@en;\\n    bamm:exampleValue \\\"solid\\\".\\n:chemicalComposition a bamm:Property;\\n    bamm:name \\\"chemicalComposition\\\";\\n    bamm:characteristic :materialCollection.\\n:materialCollection a bamm-c:Collection;\\n    bamm:name \\\"materialCollection\\\";\\n    bamm-c:elementCharacteristic :MaterialCharacteristic.\\n:MaterialNamesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialNamesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible material names\\\"@en;\\n    bamm-c:values (\\\"aluminium\\\" \\\"polyamide\\\" \\\"composite\\\" \\\"synthetic rubber\\\" \\\"chromed plastic\\\" \\\"others\\\" \\\"Aluminium (Metall)\\\" \\\"Anode Copper\\\" \\\"Carbon Steel (1008)\\\" \\\"Cathode Aluminium\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Eisen\\\" \\\"Kleber\\\" \\\"Material_1768\\\" \\\"Material_23315\\\" \\\"Material_2812\\\" \\\"Material_2889\\\" \\\"Material_3367\\\" \\\"Material_728088751\\\" \\\"Material_781\\\" \\\"Material_9999\\\" \\\"Paraffinwachse und Kohlenwasserstoffwachse, oxidiert, Lithiumsalze\\\" \\\"Polyamid 6\\\" \\\"Polyethylen\\\").\\n:MaterialTypesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"MaterialTypesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible types of a material\\\"@en;\\n    bamm-c:values (\\\"metal\\\" \\\"plastic\\\" \\\"composite\\\" \\\"rubber\\\" \\\"other\\\" \\\"Adhesives, sealants\\\" \\\"Aluminium and aluminium alloys\\\" \\\"Composite\\\" \\\"Copper\\\" \\\"Lubricants\\\" \\\"Plastics\\\" \\\"Steels / cast steels / sintered steel\\\" \\\"Washing water, battery acids\\\" \\\"highly alloyed\\\").\\n:AggregateStatesEnumeration a bamm-c:Enumeration;\\n    bamm:name \\\"AggregateStatesEnumeration\\\";\\n    bamm:dataType xsd:string;\\n    bamm:description \\\"An enumeration of possible aggregate states\\\"@en;\\n    bamm-c:values (\\\"gas\\\" \\\"liquid\\\" \\\"solid\\\").\\n:weight a bamm:Property;\\n    bamm:name \\\"weight\\\";\\n    bamm:characteristic :Weight.\\n:Weight a bamm-c:Quantifiable;\\n    bamm:name \\\"Weight\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Weight of the material\\\"@en;\\n    bamm-c:unit unit:kilogram.\\n:chemicalCompositionFraction a bamm:Property;\\n    bamm:name \\\"chemicalCompositionFraction\\\";\\n    bamm:characteristic :Fraction;\\n    bamm:description \\\"Fraction of the material in a chemical composition. Is not set if material is not part of a material composition.\\\"@en;\\n    bamm:exampleValue \\\"0.23\\\"^^xsd:double.\\n:Fraction a bamm:Characteristic;\\n    bamm:name \\\"Fraction\\\";\\n    bamm:dataType xsd:double;\\n    bamm:description \\\"Fraction of something\\\"@en.\\n:Constraint1 a bamm:Constraint;\\n    bamm:name \\\"Constraint1\\\".\\n:Constraint2 a bamm:Constraint;\\n    bamm:name \\\"Constraint2\\\".\\n\",\n    \"private\": false,\n    \"type\": \"BAMM\"\n}"
								},
								"url": {
									"raw": "{{semanticHubUrl}}/api/v1/models",
									"host": [
										"{{semanticHubUrl}}"
									],
									"path": [
										"api",
										"v1",
										"models"
									]
								}
							},
							"response": [
								{
									"name": "The resulting model entry.",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n \"id\": \"non Duis occaecat\",\n \"name\": \"et incididunt voluptate\",\n \"private\": true,\n \"publisher\": \"Ut\",\n \"type\": \"OWL\",\n \"version\": \"sed irure proident\"\n}"
								},
								{
									"name": "Created",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Created",
									"code": 201,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Bad Request",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Unauthorized",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Unauthorized",
									"code": 401,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Forbidden",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Forbidden",
									"code": 403,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Not Found",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Internal Server Error",
									"originalRequest": {
										"method": "PUT",
										"header": [],
										"body": {
											"mode": "raw",
											"raw": "{\n    \"model\": \"Excepteur consequat\",\n    \"private\": true,\n    \"type\": \"BAMM\"\n}"
										},
										"url": {
											"raw": "{{baseUrl}}/models/:model-id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"models",
												":model-id"
											],
											"variable": [
												{
													"key": "model-id"
												}
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "text/plain"
										}
									],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Twin Registry",
					"item": [
						{
							"name": "registry/shell-descriptors",
							"item": [
								{
									"name": "{aas Identifier}",
									"item": [
										{
											"name": "submodel-descriptors",
											"item": [
												{
													"name": "{submodel Identifier}",
													"item": [
														{
															"name": "Returns a specific Submodel Descriptor",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
																	"host": [
																		"{{twinRegistryUrl}}"
																	],
																	"path": [
																		"registry",
																		"shell-descriptors",
																		":aasIdentifier",
																		"submodel-descriptors",
																		":submodelIdentifier"
																	],
																	"variable": [
																		{
																			"key": "aasIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																		},
																		{
																			"key": "submodelIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Requested Submodel Descriptor",
																	"originalRequest": {
																		"method": "GET",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registry",
																				"shell-descriptors",
																				":aasIdentifier",
																				"submodel-descriptors",
																				":submodelIdentifier"
																			],
																			"variable": [
																				{
																					"key": "aasIdentifier",
																					"value": "sunt do exercitation",
																					"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																				},
																				{
																					"key": "submodelIdentifier",
																					"value": "sunt do exercitation",
																					"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
																}
															]
														},
														{
															"name": "Updates an existing Submodel Descriptor",
															"request": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Content-Type",
																		"value": "application/json"
																	}
																],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
																	"host": [
																		"{{twinRegistryUrl}}"
																	],
																	"path": [
																		"registry",
																		"shell-descriptors",
																		":aasIdentifier",
																		"submodel-descriptors",
																		":submodelIdentifier"
																	],
																	"variable": [
																		{
																			"key": "aasIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																		},
																		{
																			"key": "submodelIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Submodel Descriptor updated successfully",
																	"originalRequest": {
																		"method": "PUT",
																		"header": [],
																		"body": {
																			"mode": "raw",
																			"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
																			"options": {
																				"raw": {
																					"language": "json"
																				}
																			}
																		},
																		"url": {
																			"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registry",
																				"shell-descriptors",
																				":aasIdentifier",
																				"submodel-descriptors",
																				":submodelIdentifier"
																			],
																			"variable": [
																				{
																					"key": "aasIdentifier",
																					"value": "sunt do exercitation",
																					"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																				},
																				{
																					"key": "submodelIdentifier",
																					"value": "sunt do exercitation",
																					"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														},
														{
															"name": "Deletes a Submodel Descriptor",
															"request": {
																"method": "DELETE",
																"header": [],
																"url": {
																	"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
																	"host": [
																		"{{twinRegistryUrl}}"
																	],
																	"path": [
																		"registry",
																		"shell-descriptors",
																		":aasIdentifier",
																		"submodel-descriptors",
																		":submodelIdentifier"
																	],
																	"variable": [
																		{
																			"key": "aasIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																		},
																		{
																			"key": "submodelIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "Submodel Descriptor deleted successfully",
																	"originalRequest": {
																		"method": "DELETE",
																		"header": [],
																		"url": {
																			"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"registry",
																				"shell-descriptors",
																				":aasIdentifier",
																				"submodel-descriptors",
																				":submodelIdentifier"
																			],
																			"variable": [
																				{
																					"key": "aasIdentifier",
																					"value": "sunt do exercitation",
																					"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																				},
																				{
																					"key": "submodelIdentifier",
																					"value": "sunt do exercitation",
																					"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
																				}
																			]
																		}
																	},
																	"status": "No Content",
																	"code": 204,
																	"_postman_previewlanguage": "text",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "text/plain"
																		}
																	],
																	"cookie": [],
																	"body": ""
																}
															]
														}
													]
												},
												{
													"name": "Returns all Submodel Descriptors",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
															"host": [
																"{{twinRegistryUrl}}"
															],
															"path": [
																"registry",
																"shell-descriptors",
																":aasIdentifier",
																"submodel-descriptors"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"response": [
														{
															"name": "Requested Submodel Descriptors",
															"originalRequest": {
																"method": "GET",
																"header": [],
																"url": {
																	"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registry",
																		"shell-descriptors",
																		":aasIdentifier",
																		"submodel-descriptors"
																	],
																	"variable": [
																		{
																			"key": "aasIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
														}
													]
												},
												{
													"name": "Creates a new Submodel Descriptor, i.e. registers a submodel",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
															"host": [
																"{{twinRegistryUrl}}"
															],
															"path": [
																"registry",
																"shell-descriptors",
																":aasIdentifier",
																"submodel-descriptors"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"response": [
														{
															"name": "Submodel Descriptor created successfully",
															"originalRequest": {
																"method": "POST",
																"header": [],
																"body": {
																	"mode": "raw",
																	"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
																	"options": {
																		"raw": {
																			"language": "json"
																		}
																	}
																},
																"url": {
																	"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"registry",
																		"shell-descriptors",
																		":aasIdentifier",
																		"submodel-descriptors"
																	],
																	"variable": [
																		{
																			"key": "aasIdentifier",
																			"value": "sunt do exercitation",
																			"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																		}
																	]
																}
															},
															"status": "Created",
															"code": 201,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}"
														}
													]
												}
											]
										},
										{
											"name": "Returns a specific Asset Administration Shell Descriptor",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier",
													"host": [
														"{{twinRegistryUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "urn%3Atwin%3Acom.BMW%2369ab0d77-c981-41fe-8c0f-bd0c8256228d",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"response": [
												{
													"name": "Requested Asset Administration Shell Descriptor",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registry",
																"shell-descriptors",
																":aasIdentifier"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
												}
											]
										},
										{
											"name": "Updates an existing Asset Administration Shell Descriptor",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier",
													"host": [
														"{{twinRegistryUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"response": [
												{
													"name": "Asset Administration Shell Descriptor updated successfully",
													"originalRequest": {
														"method": "PUT",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registry",
																"shell-descriptors",
																":aasIdentifier"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										},
										{
											"name": "Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier",
													"host": [
														"{{twinRegistryUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"response": [
												{
													"name": "Asset Administration Shell Descriptor deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"registry",
																"shell-descriptors",
																":aasIdentifier"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Returns all Asset Administration Shell Descriptors",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors?page=0&pageSize=10",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors"
											],
											"query": [
												{
													"key": "page",
													"value": "0"
												},
												{
													"key": "pageSize",
													"value": "10"
												}
											]
										}
									},
									"response": [
										{
											"name": "Requested Asset Administration Shell Descriptors",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors?page=0&pageSize=10",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors"
													],
													"query": [
														{
															"key": "page",
															"value": "0"
														},
														{
															"key": "pageSize",
															"value": "10"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"items\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"The shell for a vehicle\"\n        }\n      ],\n      \"globalAssetId\": {\n        \"value\": [\n          \"VIN1230941209423423\"\n        ]\n      },\n      \"idShort\": \"future concept x\",\n      \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n      \"specificAssetIds\": [\n        {\n          \"key\": \"engineserialid\",\n          \"value\": \"12309481209312\"\n        }\n      ],\n      \"submodelDescriptors\": [\n        {\n          \"description\": [\n            {\n              \"language\": \"en\",\n              \"text\": \"Provides base vehicle information\"\n            }\n          ],\n          \"idShort\": \"vehicle base details\",\n          \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n          \"semanticId\": {\n            \"value\": [\n              \"urn:bamm:com.catenax.vehicle:0.1.1\"\n            ]\n          },\n          \"endpoints\": [\n            {\n              \"interface\": \"HTTP\",\n              \"protocolInformation\": {\n                \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n                \"endpointProtocol\": \"HTTPS\",\n                \"endpointProtocolVersion\": \"1.0\"\n              }\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"idShort\": \"future concept x\",\n      \"identification\": \"459842bf-3466-4eb6-8d95-ef0557e64883\"\n    }\n  ],\n  \"totalItems\": 2,\n  \"currentPage\": 0,\n  \"totalPages\": 1,\n  \"itemCount\": 2\n}"
										}
									]
								},
								{
									"name": "Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": [\r\n        {\r\n            \"language\": \"en\",\r\n            \"text\": \"BMW 520e Plugin-Hybrid\"\r\n        }\r\n    ],\r\n    \"globalAssetId\": {\r\n        \"value\": [\r\n            \"urn:ID:com.BMW#69ab0d77-c981-41fe-8c0f-bd0c8256228d\"\r\n        ]\r\n    },\r\n    \"idShort\": \"BMW 520e Plugin-Hybrid\",\r\n    \"identification\": \"69ab0d77-c981-41fe-8c0f-bd0c8256228d\",\r\n    \"specificAssetIds\": [\r\n        {\r\n            \"key\": \"urn:iso:std:iso:4030:ed-3:v1:en\",\r\n            \"value\": \"5UXFE43588L890072\"\r\n        },\r\n        {\r\n            \"key\": \"urn:bom:com.BMW:part-serial\",\r\n            \"value\": \"ABOlhjidrBYndEZPJ9xXZzH2MbSBHI6EzfO6UF8AnnHvFKWBTTO5MrhHXUgTHmNhz9SAn3qxGSIbLGI14K3FhHGzVNMawdOeaItJ0EeNy4Mi3g\"\r\n        },\r\n        {\r\n            \"key\": \"urn:bom:com.BMW:part-number\",\r\n            \"value\": \"31BK\"\r\n        }\r\n    ],\r\n    \"submodelDescriptors\": [\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"Catena-X Traceability Aspect Implementation\"\r\n                }\r\n            ],\r\n            \"idShort\": \"sql-traceability\",\r\n            \"identification\": \"traceability-aspect\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenaX:0.0.1#Traceability\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"http://localhost:8080\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"http://localhost:4243/offer-tdm/shells/69ab0d77-c981-41fe-8c0f-bd0c8256228d/aas/sql-traceability\",\r\n                        \"endpointProtocol\": \"AAS/SUBMODEL\",\r\n                        \"endpointProtocolVersion\": \"1.0RC02\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors"
											]
										}
									},
									"response": [
										{
											"name": "Asset Administration Shell Descriptor created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates a Sample AAS",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": [\r\n        {\r\n            \"language\": \"en\",\r\n            \"text\": \"The shell for a brake system\"\r\n        }\r\n    ],\r\n    \"globalAssetId\": {\r\n        \"value\": [\r\n            \"urn:twin:com.tsystems#3c7556f7-6956-4360-8036-d03e5a79c3c8\"\r\n        ]\r\n    },\r\n    \"idShort\": \"brake_dt_2019_snr.asm\",\r\n    \"identification\": \"3c7556f7-6956-4360-8036-d03e5a79c3c8\",\r\n    \"specificAssetIds\": [\r\n        {\r\n            \"key\": \"http://pwc.t-systems.com/datamodel/common\",\r\n            \"value\": \"0000000251\"\r\n        },\r\n        {\r\n            \"key\": \"urn:VR:wt.part.WTPart#\",\r\n            \"value\": \"25054146@nis11c130.epdm-d.edm.dsh.de\"\r\n        }\r\n    ],\r\n    \"submodelDescriptors\": [\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"Catena-X Traceability Aspect Implementation\"\r\n                }\r\n            ],\r\n            \"idShort\": \"bom-aspect\",\r\n            \"identification\": \"brake-traceability\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenaX:0.0.1#Traceability\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"http://provider-control-plane:9191\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://offer-windchill/shells/3c7556f7-6956-4360-8036-d03e5a79c3c8/aas/brake-traceability\",\r\n                        \"endpointProtocol\": \"AAS/SUBMODEL\",\r\n                        \"endpointProtocolVersion\": \"1.0RC02\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"Catena-X Material Aspect Implementation\"\r\n                }\r\n            ],\r\n            \"idShort\": \"material-aspect\",\r\n            \"identification\": \"brake-material\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenaX:0.0.1#Material\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"http://provider-control-plane:9191\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://offer-windchill/shells/3c7556f7-6956-4360-8036-d03e5a79c3c8/aas/brake-material\",\r\n                        \"endpointProtocol\": \"AAS/SUBMODEL\",\r\n                        \"endpointProtocolVersion\": \"1.0RC02\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors"
											]
										}
									},
									"response": [
										{
											"name": "Asset Administration Shell Descriptor created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Creates an Organization Twin",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": [\r\n        {\r\n            \"language\": \"en\",\r\n            \"text\": \"The shell for the Catena-X Organisation\"\r\n        }\r\n    ],\r\n    \"globalAssetId\": {\r\n        \"value\": [\r\n            \"urn:twin:com.catenax#398c047f-c14c-47b9-9c27-d9511afc90d3\"\r\n        ]\r\n    },\r\n    \"idShort\": \"Catena-X\",\r\n    \"identification\": \"398c047f-c14c-47b9-9c27-d9511afc90d3\",\r\n    \"specificAssetIds\": [\r\n        {\r\n            \"key\": \"urn:orga:com.catenax#\",\r\n            \"value\": \"Catena-X\"\r\n        }\r\n    ],\r\n    \"submodelDescriptors\": [\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"Catena-X ID-Conversion Aspect Implementation\"\r\n                }\r\n            ],\r\n            \"idShort\": \"default-idconversion\",\r\n            \"identification\": \"idconversion-aspect\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenaX:1.0.0#IdConversion\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider-control-plane:9191/offer-orga/shells/398c047f-c14c-47b9-9c27-d9511afc90d3/aas/idconversion-aspect/submodel?async=false&content=value\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors"
											]
										}
									},
									"response": [
										{
											"name": "Asset Administration Shell Descriptor created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "OLA TEST",
							"item": [
								{
									"name": "Creates a new Asset Administration Shell Descriptor, i.e. registers an AAS",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"description\": [\r\n        {\r\n            \"language\": \"en\",\r\n            \"text\": \"ipsum\"\r\n        }\r\n    ],\r\n    \"globalAssetId\": {\r\n        \"value\": [\r\n            \"urn:uuid:2353a439-166c-434e-8c70-3b1ace799818\"\r\n        ]\r\n    },\r\n    \"idShort\": \"nonumy\",\r\n    \"identification\": \"4a3f5719-8a91-4f3c-853e-35b88f01c3fe\",\r\n    \"specificAssetIds\": [\r\n        {\r\n            \"key\": \"PartInstanceID\",\r\n            \"value\": \"5e71bfbe20c1209e\"\r\n        },\r\n        {\r\n            \"key\": \"ManufacturerPartID\",\r\n            \"value\": \"cc0d0f41c51b7d45\"\r\n        },\r\n        {\r\n            \"key\": \"ManufacturerID\",\r\n            \"value\": \"ac7d0695-6f7b-4133-af93-602bd627cf0f\"\r\n        },\r\n        {\r\n            \"key\": \"VIN\",\r\n            \"value\": \"WVWZZZ4B84N005649\"\r\n        }\r\n    ],\r\n    \"submodelDescriptors\": [\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"diam\"\r\n                }\r\n            ],\r\n            \"idShort\": \"sed\",\r\n            \"identification\": \"a1e2787868464936\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenax.material_for_recycling:1.0.0#MaterialForRecycling\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider.connector:9191/offer/shells/2353a439-166c-434e-8c70-3b1ace799818/aas/a1e2787868464936/submodel\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"in\"\r\n                }\r\n            ],\r\n            \"idShort\": \"accusam\",\r\n            \"identification\": \"df4cfcd3bdcd12b4\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenax.physical_dimension:1.0.0#PhysicalDimensions\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider.connector:9191/offer/shells/2353a439-166c-434e-8c70-3b1ace799818/aas/df4cfcd3bdcd12b4/submodel\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"sanctus\"\r\n                }\r\n            ],\r\n            \"idShort\": \"esse\",\r\n            \"identification\": \"1f5b981507faf669\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenax.return_request:1.0.0#ReturnRequest\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider.connector:9191/offer/shells/2353a439-166c-434e-8c70-3b1ace799818/aas/1f5b981507faf669/submodel\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"dolores\"\r\n                }\r\n            ],\r\n            \"idShort\": \"dolore\",\r\n            \"identification\": \"9e64901f46507820\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:io.catenax.serial_part_typization:1.1.0#SerialPartTypization\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider.connector:9191/offer/shells/2353a439-166c-434e-8c70-3b1ace799818/aas/9e64901f46507820/submodel\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"et\"\r\n                }\r\n            ],\r\n            \"idShort\": \"sit\",\r\n            \"identification\": \"a2ad520b61910da2\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:io.catenax.assembly_part_relationship:1.1.0#AssemblyPartRelationship\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider.connector:9191/offer/shells/2353a439-166c-434e-8c70-3b1ace799818/aas/a2ad520b61910da2/submodel\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"description\": [\r\n                {\r\n                    \"language\": \"en\",\r\n                    \"text\": \"Consetetur\"\r\n                }\r\n            ],\r\n            \"idShort\": \"aliquyam\",\r\n            \"identification\": \"4680056cf9dc8ed3\",\r\n            \"semanticId\": {\r\n                \"value\": [\r\n                    \"urn:bamm:com.catenax.vehicle.product_description:1.0.0#ProductDescription\"\r\n                ]\r\n            },\r\n            \"endpoints\": [\r\n                {\r\n                    \"interface\": \"SUBMODEL-1.0RC02\",\r\n                    \"protocolInformation\": {\r\n                        \"endpointAddress\": \"edc://provider.connector:9191/offer/shells/2353a439-166c-434e-8c70-3b1ace799818/aas/4680056cf9dc8ed3/submodel\",\r\n                        \"endpointProtocol\": \"IDS/ECLIPSE DATASPACE CONNECTOR\",\r\n                        \"endpointProtocolVersion\": \"0.0.1-SNAPSHOT\"\r\n                    }\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors"
											]
										}
									},
									"response": [
										{
											"name": "Asset Administration Shell Descriptor created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors"
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Returns a specific Asset Administration Shell Descriptor",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors",
												":aasIdentifier"
											],
											"variable": [
												{
													"key": "aasIdentifier",
													"value": "4a3f5719-8a91-4f3c-853e-35b88f01c3fe",
													"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Requested Asset Administration Shell Descriptor",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Deletes an Asset Administration Shell Descriptor, i.e. de-registers an AAS",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors",
												":aasIdentifier"
											],
											"variable": [
												{
													"key": "aasIdentifier",
													"value": "WVWZZZ4B84N005649",
													"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Asset Administration Shell Descriptor deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Creates a new Submodel Descriptor, i.e. registers a submodel Copy",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors",
												":aasIdentifier",
												"submodel-descriptors"
											],
											"variable": [
												{
													"key": "aasIdentifier",
													"value": "sunt do exercitation",
													"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Submodel Descriptor created successfully",
											"originalRequest": {
												"method": "POST",
												"header": [],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"Provides base vehicle information\"\n    }\n  ],\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier",
														"submodel-descriptors"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"status": "Created",
											"code": 201,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"description\": [\n    {\n      \"language\": \"en\",\n      \"text\": \"The shell for a vehicle\"\n    }\n  ],\n  \"globalAssetId\": {\n    \"value\": [\n      \"VIN1230941209423423\"\n    ]\n  },\n  \"idShort\": \"future concept x\",\n  \"identification\": \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"specificAssetIds\": [\n    {\n      \"key\": \"engineserialid\",\n      \"value\": \"12309481209312\"\n    }\n  ],\n  \"submodelDescriptors\": [\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle base details\",\n      \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    },\n    {\n      \"description\": [\n        {\n          \"language\": \"en\",\n          \"text\": \"Provides base vehicle information\"\n        }\n      ],\n      \"idShort\": \"vehicle part details\",\n      \"identification\": \"dae4d249-6d66-4818-b576-bf52f3b9ae90\",\n      \"semanticId\": {\n        \"value\": [\n          \"urn:bamm:com.catenax.vehicle:0.1.1#PartDetails\"\n        ]\n      },\n      \"endpoints\": [\n        {\n          \"interface\": \"HTTP\",\n          \"protocolInformation\": {\n            \"endpointAddress\": \"https://catena-x.net/vehicle/partdetails/\",\n            \"endpointProtocol\": \"HTTPS\",\n            \"endpointProtocolVersion\": \"1.0\"\n          }\n        }\n      ]\n    }\n  ]\n}"
										}
									]
								},
								{
									"name": "Deletes a Submodel Descriptor",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors",
												":aasIdentifier",
												"submodel-descriptors",
												":submodelIdentifier"
											],
											"variable": [
												{
													"key": "aasIdentifier",
													"value": "sunt do exercitation",
													"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
												},
												{
													"key": "submodelIdentifier",
													"value": "sunt do exercitation",
													"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Submodel Descriptor deleted successfully",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors/:submodelIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier",
														"submodel-descriptors",
														":submodelIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														},
														{
															"key": "submodelIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Submodel’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"status": "No Content",
											"code": 204,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "text/plain"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Returns all Submodel Descriptors",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{twinRegistryUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"registry",
												"shell-descriptors",
												":aasIdentifier",
												"submodel-descriptors"
											],
											"variable": [
												{
													"key": "aasIdentifier",
													"value": "4a3f5719-8a91-4f3c-853e-35b88f01c3fe",
													"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
												}
											]
										}
									},
									"response": [
										{
											"name": "Requested Submodel Descriptors",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/registry/shell-descriptors/:aasIdentifier/submodel-descriptors",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"registry",
														"shell-descriptors",
														":aasIdentifier",
														"submodel-descriptors"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"idShort\": \"vehicle base details\",\n  \"identification\": \"4a738a24-b7d8-4989-9cd6-387772f40565\",\n  \"semanticId\": {\n    \"value\": [\n      \"urn:bamm:com.catenax.vehicle:0.1.1\"\n    ]\n  },\n  \"endpoints\": [\n    {\n      \"interface\": \"HTTP\",\n      \"protocolInformation\": {\n        \"endpointAddress\": \"https://catena-x.net/vehicle/basedetails/\",\n        \"endpointProtocol\": \"HTTPS\",\n        \"endpointProtocolVersion\": \"1.0\"\n      }\n    }\n  ]\n}"
										}
									]
								}
							]
						},
						{
							"name": "lookup/shells",
							"item": [
								{
									"name": "{aas Identifier}",
									"item": [
										{
											"name": "Returns a list of Asset identifier key-value-pairs based on an Asset Administration Shell id to edit discoverable content",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/lookup/shells/:aasIdentifier",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lookup",
														"shells",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"response": [
												{
													"name": "Requested Asset identifier key-value-pairs",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/lookup/shells/:aasIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"lookup",
																"shells",
																":aasIdentifier"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"key\": \"engineserialid\",\n    \"value\": \"1239472980298312\"\n  },\n  {\n    \"key\": \"brakenumber\",\n    \"value\": \"123092\"\n  }\n]"
												}
											]
										},
										{
											"name": "Creates all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  {\n    \"key\": \"engineserialid\",\n    \"value\": \"1239472980298312\"\n  },\n  {\n    \"key\": \"brakenumber\",\n    \"value\": \"123092\"\n  }\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{twinRegistryUrl}}lookup/shells/:aasIdentifier",
													"host": [
														"{{twinRegistryUrl}}lookup"
													],
													"path": [
														"shells",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"response": [
												{
													"name": "Asset identifier key-value-pairs created successfully",
													"originalRequest": {
														"method": "POST",
														"header": [],
														"body": {
															"mode": "raw",
															"raw": "[\n  {\n    \"key\": \"engineserialid\",\n    \"value\": \"1239472980298312\"\n  },\n  {\n    \"key\": \"brakenumber\",\n    \"value\": \"123092\"\n  }\n]",
															"options": {
																"raw": {
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/lookup/shells/:aasIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"lookup",
																"shells",
																":aasIdentifier"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"status": "Created",
													"code": 201,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"key\": \"engineserialid\",\n    \"value\": \"1239472980298312\"\n  },\n  {\n    \"key\": \"brakenumber\",\n    \"value\": \"123092\"\n  }\n]"
												}
											]
										},
										{
											"name": "Deletes all Asset identifier key-value-pair linked to an Asset Administration Shell to edit discoverable content",
											"request": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{twinRegistryUrl}}/lookup/shells/:aasIdentifier",
													"host": [
														"{{twinRegistryUrl}}"
													],
													"path": [
														"lookup",
														"shells",
														":aasIdentifier"
													],
													"variable": [
														{
															"key": "aasIdentifier",
															"value": "sunt do exercitation",
															"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
														}
													]
												}
											},
											"response": [
												{
													"name": "Asset identifier key-value-pairs deleted successfully",
													"originalRequest": {
														"method": "DELETE",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/lookup/shells/:aasIdentifier",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"lookup",
																"shells",
																":aasIdentifier"
															],
															"variable": [
																{
																	"key": "aasIdentifier",
																	"value": "sunt do exercitation",
																	"description": "(Required) The Asset Administration Shell’s unique id (BASE64-URL-encoded)"
																}
															]
														}
													},
													"status": "No Content",
													"code": 204,
													"_postman_previewlanguage": "text",
													"header": [
														{
															"key": "Content-Type",
															"value": "text/plain"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Returns a list of Asset Administration Shell ids based on Asset identifier key-value-pairs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{twinRegistryUrl}}/lookup/shells?assetIds=%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D&assetIds=%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D",
											"host": [
												"{{twinRegistryUrl}}"
											],
											"path": [
												"lookup",
												"shells"
											],
											"query": [
												{
													"key": "assetIds",
													"value": "%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D",
													"description": "The key-value-pair of an Asset identifier"
												},
												{
													"key": "assetIds",
													"value": "%7B%22key%22%3A%22urn%3Atwin%3Acom.catenax%23%22%2C%22value%22%3A%22398c047f-c14c-47b9-9c27-d9511afc90d3%22%7D"
												}
											]
										}
									},
									"response": [
										{
											"name": "Requested Asset Administration Shell ids",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/lookup/shells?assetIds=",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"lookup",
														"shells"
													],
													"query": [
														{
															"key": "assetIds",
															"value": ""
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[\n  \"882fc530-b69b-4707-95f6-5dbc5e9baaa8\",\n  \"fj102930-b69b-4707-95f6-5dbc5e9gdfj1\"\n]"
										}
									]
								}
							]
						}
					]
				}
			],
			"auth": {
				"type": "oauth2",
				"oauth2": [
					{
						"key": "addTokenTo",
						"value": "header",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "AAS Adapter (Data Provider Side)",
			"item": [
				{
					"name": "Publish Resource (Single and Simple PDM Sample)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/offer/:offer",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"offer",
								":offer"
							],
							"variable": [
								{
									"key": "offer",
									"value": "offer-windchill",
									"description": "Preconfigured or newly registered offer name (offer-tdm/offer-windchill/offer-orga)"
								}
							]
						},
						"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
					},
					"response": []
				},
				{
					"name": "Publish Contract",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/contract/:contract",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"contract",
								":contract"
							],
							"variable": [
								{
									"key": "contract",
									"value": "contract-readall"
								}
							]
						},
						"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
					},
					"response": []
				},
				{
					"name": "Register Twins (Single PDM Sample Twin)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/register/:twin-protocol/:twin-command",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"register",
								":twin-protocol",
								":twin-command"
							],
							"variable": [
								{
									"key": "twin-protocol",
									"value": "FILE",
									"description": "Choose a backend protocol FILE|SQL"
								},
								{
									"key": "twin-command",
									"value": "brake-file",
									"description": "Choose a backend command brake-file|twin-sql|orga-file"
								}
							]
						},
						"description": "Interactively publishes a given twin source to the attached twin registry.\nEither uses the given \"twin-source\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the source in the body.\nthe Adapter may also be configured as to do an \"auto-registration\" of all preconfigured twin sources on startup"
					},
					"response": []
				},
				{
					"name": "Publish Resource (Organisation Level)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/offer/:offer",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"offer",
								":offer"
							],
							"variable": [
								{
									"key": "offer",
									"value": "offer-orga",
									"description": "Preconfigured or newly registered offer name (offer-tdm/offer-windchill/offer-orga)"
								}
							]
						},
						"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
					},
					"response": []
				},
				{
					"name": "Publish Resource (Mass Test Data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/offer/:offer",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"offer",
								":offer"
							],
							"variable": [
								{
									"key": "offer",
									"value": "offer-tdm",
									"description": "Preconfigured or newly registered offer name (offer-tdm/offer-windchill/offer-orga)"
								}
							]
						},
						"description": "Interactively publishes a given offer (with all configured representations and sources) to the attached IDS connector.\nEither uses the given \"offer\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the offer in the body.\nthe Adapter may also be configured as to do an \"auto-publish\" of all preconfigured offers on startup"
					},
					"response": []
				},
				{
					"name": "Register Twins (Orga Functions)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/register/:twin-protocol/:twin-command",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"register",
								":twin-protocol",
								":twin-command"
							],
							"variable": [
								{
									"key": "twin-protocol",
									"value": "FILE",
									"description": "Choose a backend protocol FILE|SQL"
								},
								{
									"key": "twin-command",
									"value": "orga-file",
									"description": "Choose a backend command brake-file|twin-sql|orga-file"
								}
							]
						},
						"description": "Interactively publishes a given twin source to the attached twin registry.\nEither uses the given \"twin-source\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the source in the body.\nthe Adapter may also be configured as to do an \"auto-registration\" of all preconfigured twin sources on startup"
					},
					"response": []
				},
				{
					"name": "Register Twins (Mass Test Twins)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Extract Created Agreement\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    var offerFull=jsonData.offerUri\r",
									"    console.info(\"Setting environment variable 'offer-full' to \" + offerFull)\r",
									"    pm.environment.set(\"offer-full\", offerFull);\r",
									"    var artifactFull=jsonData.representations[0].artifacts[0]\r",
									"    console.info(\"Setting environment variable 'local-artifact-full' to \" + artifactFull)\r",
									"    pm.environment.set(\"local-artifact-full\", artifactFull);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{ \r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/register/:twin-protocol/:twin-command",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"register",
								":twin-protocol",
								":twin-command"
							],
							"variable": [
								{
									"key": "twin-protocol",
									"value": "SQL",
									"description": "Choose a backend protocol FILE|SQL"
								},
								{
									"key": "twin-command",
									"value": "twin-sql",
									"description": "Choose a backend command brake-file|twin-sql|orga-file"
								}
							]
						},
						"description": "Interactively publishes a given twin source to the attached twin registry.\nEither uses the given \"twin-source\" parameter to take the configuration out of the system properties (and leave the body to an empty object)\nAlternatively, you can give it a complete configuration object for the source in the body.\nthe Adapter may also be configured as to do an \"auto-registration\" of all preconfigured twin sources on startup"
					},
					"response": []
				},
				{
					"name": "Pull Aspect Artifact (DSC Style)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/download?representation=brake-material&offer=offer-windchill&artifact=default",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"download"
							],
							"query": [
								{
									"key": "file",
									"value": "Bremse_Windchill.xml",
									"description": "uses a fixed file source for debugging",
									"disabled": true
								},
								{
									"key": "transformation",
									"value": "dcx2material.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "transformation",
									"value": "dcx2bom.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "transformation",
									"value": "dcx2twin.xsl",
									"description": "uses a fixed transformation for debugging",
									"disabled": true
								},
								{
									"key": "representation",
									"value": "brake-material",
									"description": "use a preconfigured representation"
								},
								{
									"key": "representation",
									"value": "brake-traceability",
									"description": "use a preconfigured representation",
									"disabled": true
								},
								{
									"key": "offer",
									"value": "offer-windchill",
									"description": "use a preconfigured offer"
								},
								{
									"key": "artifact",
									"value": "default",
									"description": "use a preconfigured source/artifact"
								},
								{
									"key": "offer",
									"value": "offer-tdm",
									"description": "use a preconfigured offer",
									"disabled": true
								},
								{
									"key": "artifact",
									"value": "bom-vehicle",
									"description": "use a preconfigured source/artifact",
									"disabled": true
								},
								{
									"key": "artifact",
									"value": "material-vehicle",
									"description": "use a preconfigured source/artifact",
									"disabled": true
								},
								{
									"key": "manufacturer",
									"value": "BMW",
									"description": "a key part when addressing data inside the source/artifact",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"description": "a key part when addressing data inside the source/artifact",
									"disabled": true
								},
								{
									"key": "id",
									"value": "ABOlhjidrBYndEZPJ9xXZzH2MbSBHI6EzfO6UF8AnnHvFKWBTTO5MrhHXUgTHmNhz9SAn3qxGSIbLGI14K3FhHGzVNMawdOeaItJ0EeNy4Mi3g",
									"description": "a key part when addressing data inside the source/artifact",
									"disabled": true
								},
								{
									"key": "manufacturer",
									"value": "ZF",
									"disabled": true
								},
								{
									"key": "number",
									"value": "5A047C7-01",
									"disabled": true
								},
								{
									"key": "protocol",
									"value": "FILE",
									"disabled": true
								},
								{
									"key": "command",
									"value": "brake-file",
									"disabled": true
								},
								{
									"key": "model",
									"value": "urn:com.catenaX.semantics:1.2.0-SNAPSHOT%23DigitialTwins",
									"disabled": true
								}
							]
						},
						"description": "The actual \"pull\" callback that is usually called by the IDS connector to satisfy negotiated data requests (represented by the \"offer\", \"representation\" and \"source\" parameters).  \nIt also has a \"local-only\" mode to directly investigate the data delivered from the backend systems (represented by the \"file\" and \"transformation\" parameters."
					},
					"response": []
				},
				{
					"name": "Get Submodel (AAS+EDC Style)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{semanticAdapterUrl}}/:idsResourceId/shells/:assetId/aas/:submodelId/submodel?content=value&level=deep&extent=withBlobValue",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								":idsResourceId",
								"shells",
								":assetId",
								"aas",
								":submodelId",
								"submodel"
							],
							"query": [
								{
									"key": "artifact",
									"value": "material-vehicle",
									"disabled": true
								},
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"disabled": true
								},
								{
									"key": "content",
									"value": "value"
								},
								{
									"key": "level",
									"value": "deep"
								},
								{
									"key": "extent",
									"value": "withBlobValue"
								}
							],
							"variable": [
								{
									"key": "idsResourceId",
									"value": "offer-windchill"
								},
								{
									"key": "assetId",
									"value": "3c7556f7-6956-4360-8036-d03e5a79c3c8"
								},
								{
									"key": "submodelId",
									"value": "brake-material"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoke Submodel (AAS+EDC Style)",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"targetDomain\":\"urn:VAN:com.bmw:1.0.0#\",\r\n    \"identifiers\":[\r\n        {\r\n            \"key\":\"urn:standard:org.iso:9721#\",\"value\":\"5UXFE43588L890072\"\r\n        },\r\n        {\r\n            \"key\":\"urn:standard:org.iso:9721#\",\"value\":\"WMWZB3C56EWM31941\"\r\n        },\r\n        {\r\n            \"key\":\"urn:standard:org.iso:9721#\",\"value\":\"2C3CCAAG4DH723149\"\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/:idsResourceId/shells/:assetId/aas/:submodelId/submodel/submodel-elements/:operationId/invoke?content=value&async=false",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								":idsResourceId",
								"shells",
								":assetId",
								"aas",
								":submodelId",
								"submodel",
								"submodel-elements",
								":operationId",
								"invoke"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"disabled": true
								},
								{
									"key": "content",
									"value": "value"
								},
								{
									"key": "async",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "idsResourceId",
									"value": "offer-orga"
								},
								{
									"key": "assetId",
									"value": "398c047f-c14c-47b9-9c27-d9511afc90d3"
								},
								{
									"key": "submodelId",
									"value": "idconversion-aspect"
								},
								{
									"key": "operationId",
									"value": "convert"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Invoke Submodel (AAS+EDC Style) Polymorphic",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"targetDomain\":\"urn:VAN:com.bmw:1.0.0#\",\r\n    \"identifiers\": {\r\n        \"key\":\"urn:standard:org.iso:9721#\",\r\n        \"values\": [\"5UXFE43588L890072\",\"WMWZB3C56EWM31941\",\"2C3CCAAG4DH723149\"]\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{semanticAdapterUrl}}/:idsResourceId/shells/:assetId/aas/:submodelId/submodel/submodel-elements/:operationId/invoke?content=value&async=false",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								":idsResourceId",
								"shells",
								":assetId",
								"aas",
								":submodelId",
								"submodel",
								"submodel-elements",
								":operationId",
								"invoke"
							],
							"query": [
								{
									"key": "manufacturer",
									"value": "BMW",
									"disabled": true
								},
								{
									"key": "number",
									"value": "31BK",
									"disabled": true
								},
								{
									"key": "content",
									"value": "value"
								},
								{
									"key": "async",
									"value": "false"
								}
							],
							"variable": [
								{
									"key": "idsResourceId",
									"value": "offer-orga"
								},
								{
									"key": "assetId",
									"value": "398c047f-c14c-47b9-9c27-d9511afc90d3"
								},
								{
									"key": "submodelId",
									"value": "idconversion-aspect"
								},
								{
									"key": "operationId",
									"value": "convert"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Hello",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/hello",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"hello"
							]
						},
						"description": "Returns greetings to make sure basic service connection works."
					},
					"response": []
				},
				{
					"name": "Test IDS Connectivity",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{semanticAdapterUrl}}/adapter/idsinfo",
							"host": [
								"{{semanticAdapterUrl}}"
							],
							"path": [
								"adapter",
								"idsinfo"
							]
						},
						"description": "Returns the self-description of the attached IDS connector.\nThis helps to find out whether IDS connection is alive."
					},
					"response": []
				}
			],
			"description": "The Semantic Adapter is a simple prototype of a middleware that connects backend systems (here: export files, database tables) to the IDS/Catena-X data backbone.\n\nNeeds Fraunhofer IDS Connector Version 6.\n\nIt currently supports only \"PULL\" offerings/data transfers via the builtin IDS connector",
			"auth": {
				"type": "basic",
				"basic": [
					{
						"key": "username",
						"value": "admin",
						"type": "string"
					},
					{
						"key": "password",
						"value": "secret",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "password",
				"value": "{{catenax-password}}",
				"type": "string"
			},
			{
				"key": "username",
				"value": "{{catenax-user}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:8080"
		}
	]
}